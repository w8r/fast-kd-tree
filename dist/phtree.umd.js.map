{"version":3,"file":"phtree.umd.js","sources":["../node_modules/morton/lib/morton.js","../src/hilbert.js","../src/sort.js","../src/internal_node.js","../src/leaf.js","../src/traversals.js","../src/phtree.js"],"sourcesContent":["// Morton lookup tables.\n// Based on http://graphics.stanford.edu/~seander/bithacks.html#InterleaveTableLookup\nvar X = [ 0, 1 ], Y = [ 0, 2 ];\nfor (var i = 4; i < 0xFFFF; i <<= 2) {\n    for (var j = 0, l = X.length; j < l; j++) {\n        X.push((X[j] | i));\n        Y.push((X[j] | i) << 1);\n    }\n}\n\n// Only works for 24 bit input numbers (up to 16777215).\nvar morton = module.exports = function morton(x, y) {\n    return (Y[y         & 0xFF] | X[x         & 0xFF]) +\n           (Y[(y >> 8)  & 0xFF] | X[(x >> 8)  & 0xFF]) * 0x10000 +\n           (Y[(y >> 16) & 0xFF] | X[(x >> 16) & 0xFF]) * 0x100000000;\n};\n\nvar code = module.exports.code = function code(z, x, y) {\n    if (z > 24) throw 'Morton codes are only supported up to Z=24';\n    var Z = 1 << (24 - z);\n    return morton(x * Z, y * Z);\n};\n\nvar range = module.exports.range = function range(z, x, y) {\n    if (z > 24) throw 'Morton ranges are only supported up to Z=24';\n    var Z = 1 << (24 - z);\n    var lower = morton(x * Z, y * Z);\n    return [ lower, lower + Z * Z - 1 ];\n};\n\nvar rX, rY;\nvar reverse = module.exports.reverse = function reverse(c) {\n    if (c > 0xFFFFFFFFFFFF) throw 'Only morton codes up to 48 bits are supported.';\n    if (!rX) {\n        // Create reverse lookup tables.\n        rX = {}; rY = {};\n        for (var i = 0; i < 256; i++) {\n            rX[morton(i, 0)] = i;\n            rY[morton(0, i)] = i;\n        }\n    }\n\n    var x = rX[c & 0x5555];\n    var y = rY[c & 0xAAAA];\n    if (c > 0xFFFF) {\n        c /= 0x10000;\n        x |= rX[c & 0x5555] << 8;\n        y |= rY[c & 0xAAAA] << 8;\n        if (c > 0xFFFF) {\n            c /= 0x10000;\n            x |= rX[c & 0x5555] << 16;\n            y |= rY[c & 0xAAAA] << 16;\n        }\n    }\n\n    return [ x, y ];\n};\n\nvar decode = module.exports.decode = function decode(z, c) {\n    var output = reverse(c);\n    var Z = 1 << (24 - z);\n    return [ output[0] / Z, output[1] / Z ];\n};\n","// Fast Hilbert curve algorithm by http://threadlocalmutex.com/\n// Ported from C++ https://github.com/rawrunprotected/hilbert_curves (public domain)\nexport default function hilbert(x, y) {\n  let a = x ^ y;\n  let b = 0xFFFF ^ a;\n  let c = 0xFFFF ^ (x | y);\n  let d = x & (y ^ 0xFFFF);\n\n  let A = a | (b >> 1);\n  let B = (a >> 1) ^ a;\n  let C = ((c >> 1) ^ (b & (d >> 1))) ^ c;\n  let D = ((a & (c >> 1)) ^ (d >> 1)) ^ d;\n\n  a = A; b = B; c = C; d = D;\n  A = ((a & (a >> 2)) ^ (b & (b >> 2)));\n  B = ((a & (b >> 2)) ^ (b & ((a ^ b) >> 2)));\n  C ^= ((a & (c >> 2)) ^ (b & (d >> 2)));\n  D ^= ((b & (c >> 2)) ^ ((a ^ b) & (d >> 2)));\n\n  a = A; b = B; c = C; d = D;\n  A = ((a & (a >> 4)) ^ (b & (b >> 4)));\n  B = ((a & (b >> 4)) ^ (b & ((a ^ b) >> 4)));\n  C ^= ((a & (c >> 4)) ^ (b & (d >> 4)));\n  D ^= ((b & (c >> 4)) ^ ((a ^ b) & (d >> 4)));\n\n  a = A; b = B; c = C; d = D;\n  C ^= ((a & (c >> 8)) ^ (b & (d >> 8)));\n  D ^= ((b & (c >> 8)) ^ ((a ^ b) & (d >> 8)));\n\n  a = C ^ (C >> 1);\n  b = D ^ (D >> 1);\n\n  let i0 = x ^ y;\n  let i1 = b | (0xFFFF ^ (i0 | a));\n\n  i0 = (i0 | (i0 << 8)) & 0x00FF00FF;\n  i0 = (i0 | (i0 << 4)) & 0x0F0F0F0F;\n  i0 = (i0 | (i0 << 2)) & 0x33333333;\n  i0 = (i0 | (i0 << 1)) & 0x55555555;\n\n  i1 = (i1 | (i1 << 8)) & 0x00FF00FF;\n  i1 = (i1 | (i1 << 4)) & 0x0F0F0F0F;\n  i1 = (i1 | (i1 << 2)) & 0x33333333;\n  i1 = (i1 | (i1 << 1)) & 0x55555555;\n\n  return ((i1 << 1) | i0) >>> 0;\n}\n","function qsort (data, values, left, right) {\n  if (left >= right) return;\n\n  const pivot = values[(left + right) >> 1];\n  let i = left - 1;\n  let j = right + 1;\n  let temp;\n\n  while (true) {\n    do i++; while (values[i] < pivot);\n    do j--; while (values[j] > pivot);\n    if (i >= j) break;\n\n    // swap(data, values, i, j);\n    temp      = data[i];\n    data[i]   = data[j];\n    data[j]   = temp;\n\n    temp      = values[i];\n    values[i] = values[j];\n    values[j] = temp;\n  }\n\n  qsort(data, values, left, j);\n  qsort(data, values, j + 1, right);\n}\n\nexport default function sort (coords, codes) {\n  return qsort(coords, codes, 0, coords.length - 1);\n}\n","export default class InternalNode {\n  constructor (code, left, right) {\n    this.code   = code;\n    this.left   = left;\n    this.right  = right;\n    left.parent = right.parent = this;\n\n    // this.x0 = Math.min(left.x0, right.x0);\n    // this.y0 = Math.min(left.y0, right.y0);\n    // this.x1 = Math.max(left.x1, right.x1);\n    // this.y1 = Math.max(left.y1, right.y1);\n  }\n}\n","export class Leaf {\n  constructor (code, data) {\n    this.code = code;\n    this.data = data;\n\n    // this.x0 = this.x1 = data[0];\n    // this.y0 = this.y1 = data[1];\n  }\n}\n\n\nexport class BucketLeaf {\n\n  constructor (code, data) {\n    this.code = code;\n    this.data = data;\n    \n    // this.x0 = data.x1 = data[0];\n    // this.y0 = data.y1 = data[1];\n  }\n}\n","export function inOrder (fn, ctx) {\n  let current = this._root;\n  const Q = [];\n  let done = false;\n\n  while (!done) {\n    if (current) {\n      Q.push(current);\n      current = current.left;\n    } else {\n      if (Q.length !== 0) {\n        current = Q.pop();\n        if (fn.call(ctx, current)) break;\n        current = current.right;\n      } else done = true;\n    }\n  }\n  return this;\n}\n\n\nexport function preOrder (fn, ctx) {\n  const Q = [this._root];\n  while (Q.length !== 0)  {\n    const node = Q.pop();\n    if (!fn.call(ctx, node)) {\n      if (node.right) Q.push(node.right);\n      if (node.left)  Q.push(node.left);\n    }\n  }\n  return this;\n}\n\n\nexport function postOrder (fn, ctx) {\n  const Q = [];\n  let node = this._root, last;\n  do {\n    while (node) {\n      if (node.right) Q.push(node.right);\n      Q.push(node);\n      node = node.left;\n    }\n    node = Q.pop();\n    last = Q.length - 1;\n    if (node.right && Q[last] === node.right) {\n      Q[last] = node;\n      node = node.right;\n    } else {\n      fn.call(ctx, node);\n      node = null;\n    }\n  } while (Q.length !== 0);\n\n  return this;\n}\n\n\nexport function map (fn, ctx) {\n  const res = [];\n  this.inOrder(node => {\n    res.push(fn.call(ctx, node));\n  });\n  return res;\n}\n\n\n/**\n   * Tree height\n   * @return {Number}\n   */\nexport function height () {\n  return treeHeight(this._root);\n}\n\n\n  /**\n   * Print tree\n   * @public\n   * @export\n   * @param  {Function(Node):String} [printNode]\n   * @return {String}\n   */\nexport function toString (printNode = (n) => n.code) {\n  const out = [];\n  row(this._root, '', true, (v) => out.push(v), printNode);\n  return out.join('');\n}\n\n\n  /**\n   * Number of nodes\n   * @return {Number}\n   */\nexport function size () {\n  let i = 0;\n  this.preOrder(() => { i++; });\n  return i;\n}\n\n\nfunction treeHeight (node) {\n  return node ? (1 + Math.max(treeHeight(node.left), treeHeight(node.right))) : 0;\n}\n\n\n/**\n * Prints level of the tree\n * @param  {Node}                        root\n * @param  {String}                      prefix\n * @param  {Boolean}                     isTail\n * @param  {Function(in:string):void}    out\n * @param  {Function(node:Node):String}  printNode\n */\nfunction row (root, prefix, isTail, out, printNode) {\n  if (root) {\n    out(prefix + (isTail ? '^-- ' : '|-- ') + printNode(root) + '\\n');\n    const indent = prefix + (isTail ? '    ' : '|   ');\n    if (root.left)  row(root.left,  indent, false, out, printNode);\n    if (root.right) row(root.right, indent, true,  out, printNode);\n  }\n}\n\n\nfunction walk (fn) {\n  const stack = [this._minX, this._minY, this._maxX, this._maxY, 0];\n  const Q = [this._root];\n\n  let i = 0, j = 0;\n  while (Q.length !== 0) {\n    const node = Q.pop();\n\n    const dir  = stack.pop();\n    const ymax = stack.pop();\n    const xmax = stack.pop();\n    const ymin = stack.pop();\n    const xmin = stack.pop();\n\n    if (node) {\n      if (fn(node, xmin, ymin, xmax, ymax)) break;\n      const hw = (xmax - xmin) / 2,\n            hh = (ymax - ymin) / 2;\n      //const nextDir = dir > 0 ? (dir - 1) : 3;\n      const nextDir = (dir + 1) % 2;\n\n      Q.push(node.left, node.right)\n\n      if (nextDir) { // by x\n        stack.push(xmin, ymin, xmin + hw, ymax, nextDir);\n        stack.push(xmin + hw, ymin, xmax, ymax, nextDir);\n      } else {       // by y\n        stack.push(xmin, ymin + hh, xmax, ymax, nextDir);\n        stack.push(xmin, ymin, xmax, ymin + hh, nextDir);\n      }\n    }\n  }\n  return this;\n}\n\n\nfunction query (x0, y0, x1, y1) {\n  const res = [];\n  this.walk((n, xmin, ymin, xmax, ymax) => {\n    if (n.data) res.push(n.data);\n    return !(xmax > x0 && xmin < x1) && (ymax > y0 && ymin < y1);\n  });\n  return res;\n}\n","import morton  from 'morton';\nimport hilbert from './hilbert';\nimport sort    from './sort';\n\nimport InternalNode from './internal_node';\nimport { Leaf, BucketLeaf } from './leaf';\nimport {\n  map, preOrder, postOrder, inOrder,\n  height, size, toString\n} from './traversals';\n\nconst HILBERT = 1;\nconst MORTON  = 0;\n\n/**\n * @typedef {function(*):Number} CoordGetter\n */\n\n\nfunction buildBuckets (data, ids, codes, first, last, bucketSize) {\n  if (last - first <= bucketSize) {\n    const bucket = new Array(last - first + 1);\n    for (let i = first, j = 0; i <= last; i++, j++) bucket[j] = data[ids[i]];\n    return new BucketLeaf(codes[first], bucket);\n  }\n  const split = findSplit(codes, first, last);\n  const left  = buildBuckets(data, ids, codes, first, split, bucketSize);\n  const right = buildBuckets(data, ids, codes, split + 1, last, bucketSize);\n\n  return new InternalNode(split, left, right);\n}\n\n\nfunction build (data, ids, codes, first, last) {\n  if (last - first === 0) return new Leaf(codes[first], data[ids[first]]);\n  const split = findSplit(codes, first, last);\n  //const split = first + ((last - first) >> 1);\n  const left  = build(data, ids, codes, first, split);\n  const right = build(data, ids, codes, split + 1, last);\n  return new InternalNode(split, left, right);\n}\n\n\nclass Node {\n  constructor () {\n    this.code   = 0;\n    //this.parent = parent;\n    this.left   = null;\n    this.right  = null;\n    this.data   = null;\n  }\n}\n\n\nfunction buildIterative (data, ids, codes, start, end) {\n  let root    = new Node();\n  let parent  = null;\n  const stack = [root, start, end];\n\n  while (stack.length !== 0) {\n    const last  = stack.pop();\n    const first = stack.pop();\n    const node  = stack.pop();\n\n    if (last - first === 0) {\n      node.code = codes[first];\n      node.data = data[ids[first]];\n    } else {\n      const split = findSplit(codes, first, last);\n      //const split = (first + last) >> 1;\n      node.code = split;\n\n      if (first <= split) {\n        node.left = new Node();\n        stack.push(node.left);\n        stack.push(first, split);\n      }\n\n      if (last > split) {\n        node.right = new Node();\n        stack.push(node.right);\n        stack.push(split + 1, last);\n      }\n    }\n  }\n  return root;\n}\n\n\nfunction buildIterativeBuckets (data, ids, codes, start, end, bucketSize) {\n  let root = new Node(null);\n  let parent = null;\n  const Q = [root];\n  const stack = [start, end];\n\n  while (Q.length !== 0) {\n    const last  = stack.pop();\n    const first = stack.pop();\n    const node  = Q.pop();\n\n    if (last - first < bucketSize) {\n      const bucket = new Array(last - first + 1);\n      for (let i = first, j = 0; i <= last; i++, j++) bucket[j] = data[ids[i]];\n      node.code = codes[first];\n      node.data = bucket;\n    } else {\n      const split = findSplit(codes, first, last);\n      node.code = split;\n\n      if (first <= split) {\n        node.left = new Node(split, node);\n        Q.push(node.left);\n        stack.push(first, split);\n      }\n\n      if (last > split) {\n        node.right = new Node(node);\n        Q.push(node.right);\n        stack.push(split + 1, last);\n      }\n    }\n  }\n  return root;\n}\n\n\n// count leading zeroes\nfunction __clz(m) {\n  let c = 1 << 31;\n  for (let i = 0; i < 31; i += 1) {\n    if (c & m) return i;\n    c >>>= 1;\n  }\n  return 32;\n}\n\n\n// https://devblogs.nvidia.com/thinking-parallel-part-iii-tree-construction-gpu/\nfunction findSplit (codes, first, last) {\n  const f = codes[first];\n  const l = codes[last];\n\n  if (f === l) return first;\n\n  // Calculate the number of highest bits that are the same\n  // for all objects, using the count-leading-zeros intrinsic.\n  const commonPrefix = __clz(f ^ l);\n\n  // Use binary search to find where the next bit differs.\n  // Specifically, we are looking for the highest object that\n  // shares more than commonPrefix bits with the first one.\n\n  let split = first; // initial guess\n  let step = last - first, newSplit, splitCode, splitPrefix;\n\n  do {\n    step = (step + 1) >> 1; // exponential decrease\n    newSplit = split + step; // proposed new position\n\n    if (newSplit < last) {\n      splitCode = codes[newSplit];\n      splitPrefix = __clz(f ^ splitCode);\n      if (splitPrefix > commonPrefix) split = newSplit; // accept proposal\n    }\n  } while (step > 1)\n  return split;\n}\n\n\nconst defaultX = p => p.x;\nconst defaultY = p => p.y;\n\n/**\n * @public\n */\nexport default class PHTree {\n\n  /**\n   * @constructor\n   * @param  {Array<*>} points\n   * @param  {CoordGetter}   getX\n   * @param  {CoordGetter}   getY\n   * @param  {Number}   bucketSize\n   * @param  {Number}   sfc\n   */\n  constructor (points, {\n    getX = defaultX, getY = defaultY,\n    bucketSize = 0, sfc = HILBERT, recursive = true\n  } = {}) {\n    const n     = points.length;\n    const codes = new Uint32Array(n);\n    let minX = Infinity, minY = Infinity,\n        maxX = -Infinity, maxY = -Infinity;\n    let p, i, x, y;\n\n    /** @type {CoordGetter} */\n    this._x = getX;\n    /** @type {CoordGetter} */\n    this._y = getY;\n\n    const project = sfc === HILBERT ? hilbert : morton;\n    this._project = project;\n\n    const ids = new Uint32Array(n);\n\n    for (i = 0; i < n; i++) {\n      p = points[i];\n      x = getX(p);\n      y = getY(p);\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n      ids[i] = i;\n    }\n\n    /** @type {Number} */\n    this._minX = minX;\n    /** @type {Number} */\n    this._minY = minY;\n    /** @type {Number} */\n    this._maxX = maxX;\n    /** @type {Number} */\n    this._maxY = maxY;\n\n    const max = (1 << 16) - 1;\n    const w = max / (maxX - minX);\n    const h = max / (maxY - minY);\n    this._hw = w;\n    this._hh = h;\n\n    for (i = 0; i < n; i++) {\n      p = points[i];\n      codes[i] = project(w * (getX(p) - minX), h * (getY(p) - minY));\n    }\n    sort(ids, codes);\n\n    if (bucketSize === 0) {\n      this._root = recursive\n        ? build(points, ids, codes, 0, n - 1)\n        : buildIterative(points, ids, codes, 0, n - 1);\n    } else {\n      this._root = recursive\n        ? buildBuckets(points, ids, codes, 0, n - 1, bucketSize)\n        : buildIterativeBuckets(points, ids, codes, 0, n - 1, bucketSize);\n    }\n    /** @type {Number} */\n    this._bucketSize = bucketSize;\n  }\n\n\n  walk (fn) {\n    const stack = [this._minX, this._minY, this._maxX, this._maxY, 0];\n    const Q = [this._root];\n\n    let i = 0, j = 0;\n    while (Q.length !== 0) {\n      const node = Q.pop();\n\n      const dir  = stack.pop();\n      const ymax = stack.pop();\n      const xmax = stack.pop();\n      const ymin = stack.pop();\n      const xmin = stack.pop();\n\n      if (node) {\n        if (fn(node, xmin, ymin, xmax, ymax)) break;\n        const hw = (xmax - xmin) / 2,\n              hh = (ymax - ymin) / 2;\n        //const nextDir = dir > 0 ? (dir - 1) : 3;\n        const nextDir = (dir + 1) % 2;\n\n        Q.push(node.left, node.right)\n\n        if (nextDir) { // by x\n          stack.push(xmin, ymin, xmin + hw, ymax, nextDir);\n          stack.push(xmin + hw, ymin, xmax, ymax, nextDir);\n        } else {       // by y\n          stack.push(xmin, ymin + hh, xmax, ymax, nextDir);\n          stack.push(xmin, ymin, xmax, ymin + hh, nextDir);\n        }\n      }\n    }\n    return this;\n  }\n\n\n  query (x0, y0, x1, y1) {\n    const res = [];\n    this.walk((n, xmin, ymin, xmax, ymax) => {\n      if (n.data) res.push(n.data);\n      return !(xmax > x0 && xmin < x1) && (ymax > y0 && ymin < y1);\n    });\n    return res;\n  }\n}\n\n\nPHTree.prototype.inOrder   = inOrder;\nPHTree.prototype.preOrder  = preOrder;\nPHTree.prototype.postOrder = postOrder;\nPHTree.prototype.map       = map;\nPHTree.prototype.height    = height;\nPHTree.prototype.size      = size;\nPHTree.prototype.toString  = toString;\n\nPHTree.SFC = { HILBERT, MORTON };\n"],"names":["let","const","morton"],"mappings":"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"}