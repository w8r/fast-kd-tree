{"version":3,"file":"phtree.umd.js","sources":["../node_modules/morton/lib/morton.js","../src/hilbert.js","../src/sort.js","../src/mindisc.js","../src/phtree.js"],"sourcesContent":["// Morton lookup tables.\n// Based on http://graphics.stanford.edu/~seander/bithacks.html#InterleaveTableLookup\nvar X = [ 0, 1 ], Y = [ 0, 2 ];\nfor (var i = 4; i < 0xFFFF; i <<= 2) {\n    for (var j = 0, l = X.length; j < l; j++) {\n        X.push((X[j] | i));\n        Y.push((X[j] | i) << 1);\n    }\n}\n\n// Only works for 24 bit input numbers (up to 16777215).\nvar morton = module.exports = function morton(x, y) {\n    return (Y[y         & 0xFF] | X[x         & 0xFF]) +\n           (Y[(y >> 8)  & 0xFF] | X[(x >> 8)  & 0xFF]) * 0x10000 +\n           (Y[(y >> 16) & 0xFF] | X[(x >> 16) & 0xFF]) * 0x100000000;\n};\n\nvar code = module.exports.code = function code(z, x, y) {\n    if (z > 24) throw 'Morton codes are only supported up to Z=24';\n    var Z = 1 << (24 - z);\n    return morton(x * Z, y * Z);\n};\n\nvar range = module.exports.range = function range(z, x, y) {\n    if (z > 24) throw 'Morton ranges are only supported up to Z=24';\n    var Z = 1 << (24 - z);\n    var lower = morton(x * Z, y * Z);\n    return [ lower, lower + Z * Z - 1 ];\n};\n\nvar rX, rY;\nvar reverse = module.exports.reverse = function reverse(c) {\n    if (c > 0xFFFFFFFFFFFF) throw 'Only morton codes up to 48 bits are supported.';\n    if (!rX) {\n        // Create reverse lookup tables.\n        rX = {}; rY = {};\n        for (var i = 0; i < 256; i++) {\n            rX[morton(i, 0)] = i;\n            rY[morton(0, i)] = i;\n        }\n    }\n\n    var x = rX[c & 0x5555];\n    var y = rY[c & 0xAAAA];\n    if (c > 0xFFFF) {\n        c /= 0x10000;\n        x |= rX[c & 0x5555] << 8;\n        y |= rY[c & 0xAAAA] << 8;\n        if (c > 0xFFFF) {\n            c /= 0x10000;\n            x |= rX[c & 0x5555] << 16;\n            y |= rY[c & 0xAAAA] << 16;\n        }\n    }\n\n    return [ x, y ];\n};\n\nvar decode = module.exports.decode = function decode(z, c) {\n    var output = reverse(c);\n    var Z = 1 << (24 - z);\n    return [ output[0] / Z, output[1] / Z ];\n};\n","// Fast Hilbert curve algorithm by http://threadlocalmutex.com/\n// Ported from C++ https://github.com/rawrunprotected/hilbert_curves (public domain)\nexport default function hilbert(x, y) {\n  let a = x ^ y;\n  let b = 0xFFFF ^ a;\n  let c = 0xFFFF ^ (x | y);\n  let d = x & (y ^ 0xFFFF);\n\n  let A = a | (b >> 1);\n  let B = (a >> 1) ^ a;\n  let C = ((c >> 1) ^ (b & (d >> 1))) ^ c;\n  let D = ((a & (c >> 1)) ^ (d >> 1)) ^ d;\n\n  a = A; b = B; c = C; d = D;\n  A = ((a & (a >> 2)) ^ (b & (b >> 2)));\n  B = ((a & (b >> 2)) ^ (b & ((a ^ b) >> 2)));\n  C ^= ((a & (c >> 2)) ^ (b & (d >> 2)));\n  D ^= ((b & (c >> 2)) ^ ((a ^ b) & (d >> 2)));\n\n  a = A; b = B; c = C; d = D;\n  A = ((a & (a >> 4)) ^ (b & (b >> 4)));\n  B = ((a & (b >> 4)) ^ (b & ((a ^ b) >> 4)));\n  C ^= ((a & (c >> 4)) ^ (b & (d >> 4)));\n  D ^= ((b & (c >> 4)) ^ ((a ^ b) & (d >> 4)));\n\n  a = A; b = B; c = C; d = D;\n  C ^= ((a & (c >> 8)) ^ (b & (d >> 8)));\n  D ^= ((b & (c >> 8)) ^ ((a ^ b) & (d >> 8)));\n\n  a = C ^ (C >> 1);\n  b = D ^ (D >> 1);\n\n  let i0 = x ^ y;\n  let i1 = b | (0xFFFF ^ (i0 | a));\n\n  i0 = (i0 | (i0 << 8)) & 0x00FF00FF;\n  i0 = (i0 | (i0 << 4)) & 0x0F0F0F0F;\n  i0 = (i0 | (i0 << 2)) & 0x33333333;\n  i0 = (i0 | (i0 << 1)) & 0x55555555;\n\n  i1 = (i1 | (i1 << 8)) & 0x00FF00FF;\n  i1 = (i1 | (i1 << 4)) & 0x0F0F0F0F;\n  i1 = (i1 | (i1 << 2)) & 0x33333333;\n  i1 = (i1 | (i1 << 1)) & 0x55555555;\n\n  return ((i1 << 1) | i0) >>> 0;\n}\n","function qsort(data, values, left, right) {\n  if (left >= right) return;\n\n  const pivot = values[(left + right) >> 1];\n  let i = left - 1;\n  let j = right + 1;\n  let temp;\n\n  while (true) {\n    do i++; while (values[i] < pivot);\n    do j--; while (values[j] > pivot);\n    if (i >= j) break;\n\n    // swap(data, values, i, j);\n    temp      = data[i];\n    data[i]   = data[j];\n    data[j]   = temp;\n\n    temp      = values[i];\n    values[i] = values[j];\n    values[j] = temp;\n  }\n\n  qsort(data, values, left, j);\n  qsort(data, values, j + 1, right);\n}\n\nexport default function sort (coords, codes) {\n  return qsort(coords, codes, 0, coords.length - 1);\n}\n","function circleContainsCircle(cx, cy, cr, x, y, r) {\n  const dx = cx - x;\n  const dy = cy - y;\n  const dr = cr - r;\n  // reduce precision not to deal with square roots\n  return (dx * dx + dy * dy) < (dr * dr + 1e-6);\n}\n\nfunction from2discs(ax, ay, bx, by, ar, br) {\n  const dx = bx - ax;\n  const dy = by - ay;\n  const dr = br - ar;\n  const l = Math.sqrt(dx * dx + dy * dy);\n\n  return [\n    (ax + bx + dx / l * dr) / 2,\n    (ay + by + dy / l * dr) / 2,\n    (l + ar + br) / 2\n  ];\n}\n\n\nfunction from3discs(ax, ay, bx, by, cx, cy, ar, br, cr) {\n  var a2 = 2 * (ax - bx),\n    b2 = 2 * (ay - by),\n    c2 = 2 * (br - ar);\n  var d2 = ax * ax + ay * ay - ar * ar - bx * bx - by * by + br * br;\n  var a3 = 2 * (ax - cx),\n    b3 = 2 * (ay - cy),\n    c3 = 2 * (cr - ar);\n  var d3 = ax * ax + ay * ay - ar * ar - cx * cx - cy * cy + cr * cr;\n  var ab = a3 * b2 - a2 * b3,\n    xa = (b2 * d3 - b3 * d2) / ab - ax,\n    xb = (b3 * c2 - b2 * c3) / ab,\n    ya = (a3 * d2 - a2 * d3) / ab - ay,\n    yb = (a2 * c3 - a3 * c2) / ab;\n\n  var A = xb * xb + yb * yb - 1,\n    B = 2 * (xa * xb + ya * yb + ar),\n    C = xa * xa + ya * ya - ar * ar,\n    r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return [\n    xa + xb * r + ax,\n    ya + yb * r + ay,\n    r\n  ];\n}\n\n\nfunction combine(P, S, X, Y, R, from2, from3) {\n  var circle = null;\n  var len = S.length;\n  var u, v, w;\n\n  if (len === 1) { // 1 point\n    u = S[0];\n    circle = [X(u), Y(u), R(u) || 0];\n  } else if (len === 2) { // 2 points\n    u = S[0];\n    v = S[1];\n    circle = from2discs(X(u), Y(u), X(v), Y(v), R(u), R(v));\n  } else if (len === 3) { // 3 points\n    u = S[0];\n    v = S[1];\n    w = S[2];\n    circle = from3discs(X(u), Y(u), X(v), Y(v), X(w), Y(w), R(u), R(v), R(w));\n  }\n\n  return circle;\n}\n\n\nexport default function minDisc (points, bounds, n, X, Y, R) {\n  var circle = null;\n\n  if (n === 0 || bounds.length === 3) {\n    circle = combine(points, bounds, X, Y, R);\n  } else {\n    const u = points[n - 1];\n    circle = minDisc(points, bounds, n - 1, X, Y, R);\n    if (circle === null || !circleContainsCircle(circle[0], circle[1], circle[2], X(u), Y(u), R(u))) {\n      bounds.push(u);\n      circle = minDisc(points, bounds, n - 1, X, Y, R);\n      bounds.pop();\n    }\n  }\n\n  return circle;\n}\n","import morton from 'morton';\nimport hilbert from './hilbert';\n//import hilbert from 'morton';\nimport sort from './sort';\n//import SFCTree from './sfc-tree';\nimport minDisc from './mindisc';\n\nclass InternalNode {\n  constructor (code, left, right) {\n    this.code   = code;\n    this.left   = left;\n    this.right  = right;\n    left.parent = right.parent = this;\n\n    // this.x0 = Math.min(left.x0, right.x0);\n    // this.y0 = Math.min(left.y0, right.y0);\n    // this.x1 = Math.max(left.x1, right.x1);\n    // this.y1 = Math.max(left.y1, right.y1);\n  }\n}\n\nclass Leaf {\n  constructor (code, data) {\n    this.code = code;\n    this.data = data;\n\n    // this.x0 = this.x1 = data[0];\n    // this.y0 = this.y1 = data[1];\n  }\n}\n\nclass BucketLeaf {\n  constructor (code, data) {\n    this.code = code;\n    this.data = data;\n  }\n}\n\n\nfunction buildBuckets (data, ids, codes, first, last, bucketSize) {\n  if (last - first <= bucketSize) {\n    const bucket = new Array(last - first);\n    for (let i = first, j = 0; i < last; i++, j++) bucket[j] = data[ids[i]];\n    return new BucketLeaf(codes[first], bucket);\n  }\n  const split = findSplit(codes, first, last);\n  const left  = buildBuckets(data, ids, codes, first, split, bucketSize);\n  const right = buildBuckets(data, ids, codes, split + 1, last, bucketSize);\n\n  // const nd = [left, right];\n  // nd.left = left; nd.right = right;\n  // return nd;\n  return new InternalNode(split, left, right);\n}\n\n\nfunction build (data, ids, codes, first, last) {\n  if (last - first === 0) return new Leaf(codes[first], data[ids[first]]);\n  const split = findSplit(codes, first, last);\n  const left  = build(data, ids, codes, first, split);\n  const right = build(data, ids, codes, split + 1, last);\n  // const nd = [left, right];\n  // nd.left = left; nd.right = right;\n  // return nd;\n  return new InternalNode(split, left, right);\n}\n\n\nclass Node {\n  constructor (code) {\n    this.code = code;\n    this.left = this.right = null;\n    this.data = null;\n  }\n}\n\n\nfunction buildIterative (data, ids, codes, start, end) {\n  let root = new Node();\n  const Q = [root];\n  const stack = [start, end];\n\n  while (Q.length !== 0) {\n    const right = stack.pop();\n    const left  = stack.pop();\n    const node  = Q.pop();\n\n    const mid = findSplit(codes, left, right);\n    //const mid = (left + right) >> 1;\n    if (left - right === 0) {\n      node.code = codes[left];\n      node.data = data[ids[left]];\n    } else {\n      node.code = codes[mid];\n\n\n      if (left < mid) {\n        node.left = new Node();\n        Q.push(node.left);\n        stack.push(left, mid);\n      }\n\n\n      if (right > mid) {\n        node.right = new Node();\n        Q.push(node.right);\n        stack.push(mid + 1, right);\n      }\n    }\n  }\n  return root;\n}\n\n\nfunction __clz(m) {\n  let c = 1 << 31;\n  for (let i = 0; i < 31; i += 1) {\n    if (c & m) return i;\n    c >>>= 1;\n  }\n  return 32;\n}\n\n\n// https://devblogs.nvidia.com/thinking-parallel-part-iii-tree-construction-gpu/\nfunction findSplit (codes, first, last) {\n  const f = codes[first];\n  const l = codes[last];\n\n  if (f === l) return (first + last) >> 1;\n\n  // Calculate the number of highest bits that are the same\n  // for all objects, using the count-leading-zeros intrinsic.\n  const commonPrefix = __clz(f ^ l);\n\n  // Use binary search to find where the next bit differs.\n  // Specifically, we are looking for the highest object that\n  // shares more than commonPrefix bits with the first one.\n\n  let split = first; // initial guess\n  let step = last - first, newSplit, splitCode, splitPrefix;\n\n  do {\n    step = (step + 1) >> 1; // exponential decrease\n    newSplit = split + step; // proposed new position\n\n    if (newSplit < last) {\n      splitCode = codes[newSplit];\n      splitPrefix = __clz(f ^ splitCode);\n      if (splitPrefix > commonPrefix) split = newSplit; // accept proposal\n    }\n  } while (step > 1)\n  return split;\n}\n\n\nconst defaultX = p => p.x;\nconst defaultY = p => p.y;\n\n\nexport default class PHTree {\n\n  constructor(points, getX = defaultX, getY = defaultY, bucketSize = 0, sfc = 'hilbert') {\n    const n     = points.length;\n    const codes = new Uint32Array(n);\n    let minX = Infinity, minY = Infinity,\n        maxX = -Infinity, maxY = -Infinity;\n    let p, i, x, y;\n\n    this._x = getX;\n    this._y = getY;\n\n    const project = sfc === 'hilbert' ? hilbert : morton;\n    this._project = project;\n\n    const ids = new Uint32Array(n);\n\n    //const xz = new Float32Array(n), yz = new Float32Array(n);\n    for (i = 0; i < n; i++) {\n      p = points[i];\n      x = getX(p);\n      y = getY(p);\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n      ids[i] = i;\n    }\n\n    this._minX = minX;\n    this._minY = minY;\n    this._maxX = maxX;\n    this._maxY = maxY;\n\n    const max = (1 << 16) - 1;\n    const w = max / (maxX - minX);\n    const h = max / (maxY - minY);\n    this._hw = w;\n    this._hh = h;\n\n    for (i = 0; i < n; i++) {\n      p = points[i];\n      //codes[i] = project(getX(p) - minX, getY(p) - minY);\n      codes[i] = project(w * (getX(p) - minX), h * (getY(p) - minY));\n    }\n    sort(ids, codes);\n    //for (let i = 0; i < n; i++) codes[i] = copy[ids[i]];\n\n    if (bucketSize === 0) {\n      this._root = build(points, ids, codes, 0, n - 1);\n    } else {\n      this._root = buildBuckets(points, ids, codes, 0, n - 1, bucketSize);\n    }\n    this._bucketSize = bucketSize;\n  }\n\n\n  visit (fn, ctx) {\n    const Q = [this._root];\n    while (Q.length !== 0) {\n      const node = Q.pop();\n      if (node) {\n        if (fn.call(ctx, node)) break;\n        if (node.left)  Q.push(node.left);\n        if (node.right) Q.push(node.right);\n      }\n    }\n    return this;\n  }\n\n\n  inOrder (fn, ctx) {\n    let current = this._root;\n    const Q = [];\n    let done = false;\n\n    while (!done) {\n      if (current) {\n        Q.push(current);\n        current = current.left;\n      } else {\n        if (Q.length !== 0) {\n          current = Q.pop();\n          if (fn.call(ctx, current)) break;\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return this;\n  }\n\n\n  preOrder (fn, ctx) {\n    const Q = [this._root];\n    while (Q.length !== 0)  {\n      const node = Q.pop();\n      if (fn.call(ctx, node)) break;\n      if (node.right) Q.push(node.right);\n      if (node.left)  Q.push(node.left);\n    }\n    return this;\n  }\n\n\n  postOrder (fn, ctx) {\n    const Q = [];\n    let node = this._root, last;\n    do {\n      while (node) {\n        if (node.right) Q.push(node.right);\n        Q.push(node);\n        node = node.left;\n      }\n      node = Q.pop();\n      last = Q.length - 1;\n      if (node.right && Q[last] === node.right) {\n        Q[last] = node;\n        node = node.right;\n      } else {\n        if (fn.call(ctx, node)) break;\n        node = null;\n      }\n    } while (Q.length !== 0);\n\n    return this;\n  }\n\n\n  walk (fn) {\n    const stack = [this._minX, this._minY, this._maxX, this._maxY, 0];\n    const Q = [this._root];\n\n    let i = 0, j = 0;\n    while (Q.length !== 0) {\n      const node = Q.pop();\n\n      const dir  = stack.pop();\n      const ymax = stack.pop();\n      const xmax = stack.pop();\n      const ymin = stack.pop();\n      const xmin = stack.pop();\n\n      if (node) {\n        if (fn(node, xmin, ymin, xmax, ymax)) break;\n        const hw = (xmax - xmin) / 2,\n              hh = (ymax - ymin) / 2;\n        //const nextDir = dir > 0 ? (dir - 1) : 3;\n        const nextDir = (dir + 1) % 2;\n\n        Q.push(node.left, node.right)\n\n        if (nextDir) { // by x\n          stack.push(xmin, ymin, xmin + hw, ymax, nextDir);\n          stack.push(xmin + hw, ymin, xmax, ymax, nextDir);\n        } else {       // by y\n          stack.push(xmin, ymin + hh, xmax, ymax, nextDir);\n          stack.push(xmin, ymin, xmax, ymin + hh, nextDir);\n        }\n      }\n    }\n    return this;\n  }\n\n\n  query (x0, y0, x1, y1) {\n    const res = [];\n    this.walk((n, xmin, ymin, xmax, ymax) => {\n      if (n.data) res.push(n.data);\n      return !(xmax > x0 && xmin < x1) && (ymax > y0 && ymin < y1);\n    });\n    return res;\n  }\n\n\n  map (fn, ctx) {\n    const res = [];\n    this.inOrder(node => {\n      res.push(fn.call(ctx, node));\n    });\n    return res;\n  }\n\n\n  height () {\n    return height(this._root);\n  }\n\n\n  toString (printNode = (n) => n.code) {\n    const out = [];\n    row(this._root, '', true, (v) => out.push(v), printNode);\n    return out.join('');\n  }\n\n\n  size () {\n    let i = 0;\n    this.visit(() => { i++; });\n    return i;\n  }\n}\n\nPHTree.minDisc = minDisc;\n\n\nfunction height (node) {\n  return node ? (1 + Math.max(height(node.left), height(node.right))) : 0;\n}\n\n\n/**\n * Prints level of the tree\n * @param  {Node}                        root\n * @param  {String}                      prefix\n * @param  {Boolean}                     isTail\n * @param  {Function(in:string):void}    out\n * @param  {Function(node:Node):String}  printNode\n */\nfunction row (root, prefix, isTail, out, printNode) {\n  if (root) {\n    out(prefix + (isTail ? '^-- ' : '|-- ') + printNode(root) + '\\n');\n    const indent = prefix + (isTail ? '    ' : '|   ');\n    if (root.left)  row(root.left,  indent, false, out, printNode);\n    if (root.right) row(root.right, indent, true,  out, printNode);\n  }\n}\n"],"names":["let","const","morton"],"mappings":"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"}