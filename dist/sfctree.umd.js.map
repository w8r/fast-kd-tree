{"version":3,"file":"sfctree.umd.js","sources":["../src/sort.js","../src/hilbert.js","../node_modules/morton/lib/morton.js","../src/internal_node.js","../src/leaf.js","../src/traversals.js","../src/sfc-tree.js"],"sourcesContent":["function qsort (data, values, left, right) {\n  if (left >= right) return;\n\n  const pivot = values[(left + right) >> 1];\n  let i = left - 1;\n  let j = right + 1;\n  let temp;\n\n  while (true) {\n    do i++; while (values[i] < pivot);\n    do j--; while (values[j] > pivot);\n    if (i >= j) break;\n\n    // swap(data, values, i, j);\n    temp      = data[i];\n    data[i]   = data[j];\n    data[j]   = temp;\n\n    temp      = values[i];\n    values[i] = values[j];\n    values[j] = temp;\n  }\n\n  qsort(data, values, left, j);\n  qsort(data, values, j + 1, right);\n}\n\nexport default function sort (coords, codes) {\n  return qsort(coords, codes, 0, coords.length - 1);\n}\n","// Fast Hilbert curve algorithm by http://threadlocalmutex.com/\n// Ported from C++ https://github.com/rawrunprotected/hilbert_curves (public domain)\nexport default function hilbert(x, y) {\n  let a = x ^ y;\n  let b = 0xFFFF ^ a;\n  let c = 0xFFFF ^ (x | y);\n  let d = x & (y ^ 0xFFFF);\n\n  let A = a | (b >> 1);\n  let B = (a >> 1) ^ a;\n  let C = ((c >> 1) ^ (b & (d >> 1))) ^ c;\n  let D = ((a & (c >> 1)) ^ (d >> 1)) ^ d;\n\n  a = A; b = B; c = C; d = D;\n  A = ((a & (a >> 2)) ^ (b & (b >> 2)));\n  B = ((a & (b >> 2)) ^ (b & ((a ^ b) >> 2)));\n  C ^= ((a & (c >> 2)) ^ (b & (d >> 2)));\n  D ^= ((b & (c >> 2)) ^ ((a ^ b) & (d >> 2)));\n\n  a = A; b = B; c = C; d = D;\n  A = ((a & (a >> 4)) ^ (b & (b >> 4)));\n  B = ((a & (b >> 4)) ^ (b & ((a ^ b) >> 4)));\n  C ^= ((a & (c >> 4)) ^ (b & (d >> 4)));\n  D ^= ((b & (c >> 4)) ^ ((a ^ b) & (d >> 4)));\n\n  a = A; b = B; c = C; d = D;\n  C ^= ((a & (c >> 8)) ^ (b & (d >> 8)));\n  D ^= ((b & (c >> 8)) ^ ((a ^ b) & (d >> 8)));\n\n  a = C ^ (C >> 1);\n  b = D ^ (D >> 1);\n\n  let i0 = x ^ y;\n  let i1 = b | (0xFFFF ^ (i0 | a));\n\n  i0 = (i0 | (i0 << 8)) & 0x00FF00FF;\n  i0 = (i0 | (i0 << 4)) & 0x0F0F0F0F;\n  i0 = (i0 | (i0 << 2)) & 0x33333333;\n  i0 = (i0 | (i0 << 1)) & 0x55555555;\n\n  i1 = (i1 | (i1 << 8)) & 0x00FF00FF;\n  i1 = (i1 | (i1 << 4)) & 0x0F0F0F0F;\n  i1 = (i1 | (i1 << 2)) & 0x33333333;\n  i1 = (i1 | (i1 << 1)) & 0x55555555;\n\n  return ((i1 << 1) | i0) >>> 0;\n}\n","// Morton lookup tables.\n// Based on http://graphics.stanford.edu/~seander/bithacks.html#InterleaveTableLookup\nvar X = [ 0, 1 ], Y = [ 0, 2 ];\nfor (var i = 4; i < 0xFFFF; i <<= 2) {\n    for (var j = 0, l = X.length; j < l; j++) {\n        X.push((X[j] | i));\n        Y.push((X[j] | i) << 1);\n    }\n}\n\n// Only works for 24 bit input numbers (up to 16777215).\nvar morton = module.exports = function morton(x, y) {\n    return (Y[y         & 0xFF] | X[x         & 0xFF]) +\n           (Y[(y >> 8)  & 0xFF] | X[(x >> 8)  & 0xFF]) * 0x10000 +\n           (Y[(y >> 16) & 0xFF] | X[(x >> 16) & 0xFF]) * 0x100000000;\n};\n\nvar code = module.exports.code = function code(z, x, y) {\n    if (z > 24) throw 'Morton codes are only supported up to Z=24';\n    var Z = 1 << (24 - z);\n    return morton(x * Z, y * Z);\n};\n\nvar range = module.exports.range = function range(z, x, y) {\n    if (z > 24) throw 'Morton ranges are only supported up to Z=24';\n    var Z = 1 << (24 - z);\n    var lower = morton(x * Z, y * Z);\n    return [ lower, lower + Z * Z - 1 ];\n};\n\nvar rX, rY;\nvar reverse = module.exports.reverse = function reverse(c) {\n    if (c > 0xFFFFFFFFFFFF) throw 'Only morton codes up to 48 bits are supported.';\n    if (!rX) {\n        // Create reverse lookup tables.\n        rX = {}; rY = {};\n        for (var i = 0; i < 256; i++) {\n            rX[morton(i, 0)] = i;\n            rY[morton(0, i)] = i;\n        }\n    }\n\n    var x = rX[c & 0x5555];\n    var y = rY[c & 0xAAAA];\n    if (c > 0xFFFF) {\n        c /= 0x10000;\n        x |= rX[c & 0x5555] << 8;\n        y |= rY[c & 0xAAAA] << 8;\n        if (c > 0xFFFF) {\n            c /= 0x10000;\n            x |= rX[c & 0x5555] << 16;\n            y |= rY[c & 0xAAAA] << 16;\n        }\n    }\n\n    return [ x, y ];\n};\n\nvar decode = module.exports.decode = function decode(z, c) {\n    var output = reverse(c);\n    var Z = 1 << (24 - z);\n    return [ output[0] / Z, output[1] / Z ];\n};\n","export default class InternalNode {\n  constructor (code, left, right) {\n    this.code   = code;\n    this.left   = left;\n    this.right  = right;\n    left.parent = right.parent = this;\n\n    // this.x0 = Math.min(left.x0, right.x0);\n    // this.y0 = Math.min(left.y0, right.y0);\n    // this.x1 = Math.max(left.x1, right.x1);\n    // this.y1 = Math.max(left.y1, right.y1);\n  }\n}\n","export class Leaf {\n  constructor (code, data) {\n    this.code = code;\n    this.data = data;\n\n    // this.x0 = this.x1 = data[0];\n    // this.y0 = this.y1 = data[1];\n  }\n}\n\n\nexport class BucketLeaf {\n\n  constructor (code, data) {\n    this.code = code;\n    this.data = data;\n    \n    // this.x0 = data.x1 = data[0];\n    // this.y0 = data.y1 = data[1];\n  }\n}\n","export function inOrder (fn, ctx) {\n  let current = this._root;\n  const Q = [];\n  let done = false;\n\n  while (!done) {\n    if (current) {\n      Q.push(current);\n      current = current.left;\n    } else {\n      if (Q.length !== 0) {\n        current = Q.pop();\n        if (fn.call(ctx, current)) break;\n        current = current.right;\n      } else done = true;\n    }\n  }\n  return this;\n}\n\n\nexport function preOrder (fn, ctx) {\n  const Q = [this._root];\n  while (Q.length !== 0)  {\n    const node = Q.pop();\n    if (!fn.call(ctx, node)) {\n      if (node.right) Q.push(node.right);\n      if (node.left)  Q.push(node.left);\n    }\n  }\n  return this;\n}\n\n\nexport function postOrder (fn, ctx) {\n  const Q = [];\n  let node = this._root, last;\n  do {\n    while (node) {\n      if (node.right) Q.push(node.right);\n      Q.push(node);\n      node = node.left;\n    }\n    node = Q.pop();\n    last = Q.length - 1;\n    if (node.right && Q[last] === node.right) {\n      Q[last] = node;\n      node = node.right;\n    } else {\n      fn.call(ctx, node);\n      node = null;\n    }\n  } while (Q.length !== 0);\n\n  return this;\n}\n\n\nexport function map (fn, ctx) {\n  const res = [];\n  this.inOrder(node => {\n    res.push(fn.call(ctx, node));\n  });\n  return res;\n}\n\n\n/**\n   * Tree height\n   * @return {Number}\n   */\nexport function height () {\n  return treeHeight(this._root);\n}\n\n\n  /**\n   * Print tree\n   * @public\n   * @export\n   * @param  {Function(Node):String} [printNode]\n   * @return {String}\n   */\nexport function toString (printNode = (n) => n.code) {\n  const out = [];\n  row(this._root, '', true, (v) => out.push(v), printNode);\n  return out.join('');\n}\n\n\n  /**\n   * Number of nodes\n   * @return {Number}\n   */\nexport function size () {\n  let i = 0;\n  this.preOrder(() => { i++; });\n  return i;\n}\n\n\nfunction treeHeight (node) {\n  return node ? (1 + Math.max(treeHeight(node.left), treeHeight(node.right))) : 0;\n}\n\n\n/**\n * Prints level of the tree\n * @param  {Node}                        root\n * @param  {String}                      prefix\n * @param  {Boolean}                     isTail\n * @param  {Function(in:string):void}    out\n * @param  {Function(node:Node):String}  printNode\n */\nfunction row (root, prefix, isTail, out, printNode) {\n  if (root) {\n    out(prefix + (isTail ? '^-- ' : '|-- ') + printNode(root) + '\\n');\n    const indent = prefix + (isTail ? '    ' : '|   ');\n    if (root.left)  row(root.left,  indent, false, out, printNode);\n    if (root.right) row(root.right, indent, true,  out, printNode);\n  }\n}\n\n\nfunction walk (fn) {\n  const stack = [this._minX, this._minY, this._maxX, this._maxY, 0];\n  const Q = [this._root];\n\n  let i = 0, j = 0;\n  while (Q.length !== 0) {\n    const node = Q.pop();\n\n    const dir  = stack.pop();\n    const ymax = stack.pop();\n    const xmax = stack.pop();\n    const ymin = stack.pop();\n    const xmin = stack.pop();\n\n    if (node) {\n      if (fn(node, xmin, ymin, xmax, ymax)) break;\n      const hw = (xmax - xmin) / 2,\n            hh = (ymax - ymin) / 2;\n      //const nextDir = dir > 0 ? (dir - 1) : 3;\n      const nextDir = (dir + 1) % 2;\n\n      Q.push(node.left, node.right)\n\n      if (nextDir) { // by x\n        stack.push(xmin, ymin, xmin + hw, ymax, nextDir);\n        stack.push(xmin + hw, ymin, xmax, ymax, nextDir);\n      } else {       // by y\n        stack.push(xmin, ymin + hh, xmax, ymax, nextDir);\n        stack.push(xmin, ymin, xmax, ymin + hh, nextDir);\n      }\n    }\n  }\n  return this;\n}\n\n\nfunction query (x0, y0, x1, y1) {\n  const res = [];\n  this.walk((n, xmin, ymin, xmax, ymax) => {\n    if (n.data) res.push(n.data);\n    return !(xmax > x0 && xmin < x1) && (ymax > y0 && ymin < y1);\n  });\n  return res;\n}\n","import sort from './sort';\nimport hilbert from './hilbert';\nimport morton from 'morton';\nimport InternalNode from './internal_node';\nimport { BucketLeaf, Leaf } from './leaf';\nimport {\n  map, preOrder, postOrder, inOrder,\n  height, size, toString\n} from './traversals';\n\n\nconst defaultX = d => d.x;\nconst defaultY = d => d.y;\n\n\nfunction build (data, ids, codes, first, last) {\n  if (last - first === 0) return new Leaf(codes[first], data[ids[first]]);\n  const split = (last + first) >> 1;\n  const left  = build(data, ids, codes, first, split);\n  const right = build(data, ids, codes, split + 1, last);\n  // const nd = [left, right];\n  // nd.left = left; nd.right = right;\n  // return nd;\n  return new InternalNode(split, left, right);\n}\n\n/**\n * This is a very interesting decomposition:\n * It splits by equal spans on the space-filling curve.\n * It's super-fast, but the zones are of irregular shapes (tetris-like).\n * It gets worse if you use morton curve.\n */\nexport default class SFCTree {\n\n  constructor (points, { getX = defaultX, getY = defaultY, bucketSize = 0 }) {\n    const n       = points.length;\n    const hvalues = new Array(n);\n    const order   = new Array(n);\n\n    let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\n\n    for (let i = 0; i < n; i++) {\n      const p = points[i];\n      const x = getX(p), y = getY(p)\n      hvalues[i] = hilbert(x, y);\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n      order[i]  = i;\n    }\n    sort(order, hvalues);\n\n    // this._list = toList(points, order, hvalues, this._x, this._y);\n    // this._root = sortedListToBST({ head: this._list }, 0, n);\n    this._minX = minX;\n    this._minY = minY;\n    this._maxX = maxX;\n    this._maxY = maxY;\n\n    this._x = getX;\n    this._y = getY;\n    this._bucketSize = bucketSize;\n\n    this._root = build(points, order, hvalues, 0, n - 1);\n  }\n\n  query () { return [] }\n}\n\n\nSFCTree.prototype.inOrder   = inOrder;\nSFCTree.prototype.preOrder  = preOrder;\nSFCTree.prototype.postOrder = postOrder;\nSFCTree.prototype.map       = map;\nSFCTree.prototype.height    = height;\nSFCTree.prototype.size      = size;\nSFCTree.prototype.toString  = toString;\n"],"names":["const","let"],"mappings":"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"}