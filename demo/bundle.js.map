{"version":3,"file":"bundle.js","sources":["../node_modules/seedrandom/lib/alea.js","../node_modules/seedrandom/lib/xor128.js","../node_modules/seedrandom/lib/xorwow.js","../node_modules/seedrandom/lib/xorshift7.js","../node_modules/seedrandom/lib/xor4096.js","../node_modules/seedrandom/lib/tychei.js","../node_modules/rollup-plugin-node-resolve/src/empty.js","../node_modules/seedrandom/seedrandom.js","../node_modules/seedrandom/index.js","../node_modules/morton/lib/morton.js","../src/hilbert.js","../src/sort.js","../src/internal_node.js","../src/leaf.js","../src/traversals.js","../src/bvh.js","../src/sfc-tree.js","../node_modules/splaytree/index.js","../src/ubtree.js","../src/bottom-up.js","index.js"],"sourcesContent":["// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = data.toString();\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","export default {};\n","/*\nCopyright 2014 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\n// Detect the global object, even if operating in strict mode.\n// http://stackoverflow.com/a/14387057/265298\nvar global = (0, eval)('this'),\n    width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\nmath['seed' + rngname] = seedrandom;\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n}\n\n// End anonymous scope, and pass initial values.\n})(\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","// Morton lookup tables.\n// Based on http://graphics.stanford.edu/~seander/bithacks.html#InterleaveTableLookup\nvar X = [ 0, 1 ], Y = [ 0, 2 ];\nfor (var i = 4; i < 0xFFFF; i <<= 2) {\n    for (var j = 0, l = X.length; j < l; j++) {\n        X.push((X[j] | i));\n        Y.push((X[j] | i) << 1);\n    }\n}\n\n// Only works for 24 bit input numbers (up to 16777215).\nvar morton = module.exports = function morton(x, y) {\n    return (Y[y         & 0xFF] | X[x         & 0xFF]) +\n           (Y[(y >> 8)  & 0xFF] | X[(x >> 8)  & 0xFF]) * 0x10000 +\n           (Y[(y >> 16) & 0xFF] | X[(x >> 16) & 0xFF]) * 0x100000000;\n};\n\nvar code = module.exports.code = function code(z, x, y) {\n    if (z > 24) throw 'Morton codes are only supported up to Z=24';\n    var Z = 1 << (24 - z);\n    return morton(x * Z, y * Z);\n};\n\nvar range = module.exports.range = function range(z, x, y) {\n    if (z > 24) throw 'Morton ranges are only supported up to Z=24';\n    var Z = 1 << (24 - z);\n    var lower = morton(x * Z, y * Z);\n    return [ lower, lower + Z * Z - 1 ];\n};\n\nvar rX, rY;\nvar reverse = module.exports.reverse = function reverse(c) {\n    if (c > 0xFFFFFFFFFFFF) throw 'Only morton codes up to 48 bits are supported.';\n    if (!rX) {\n        // Create reverse lookup tables.\n        rX = {}; rY = {};\n        for (var i = 0; i < 256; i++) {\n            rX[morton(i, 0)] = i;\n            rY[morton(0, i)] = i;\n        }\n    }\n\n    var x = rX[c & 0x5555];\n    var y = rY[c & 0xAAAA];\n    if (c > 0xFFFF) {\n        c /= 0x10000;\n        x |= rX[c & 0x5555] << 8;\n        y |= rY[c & 0xAAAA] << 8;\n        if (c > 0xFFFF) {\n            c /= 0x10000;\n            x |= rX[c & 0x5555] << 16;\n            y |= rY[c & 0xAAAA] << 16;\n        }\n    }\n\n    return [ x, y ];\n};\n\nvar decode = module.exports.decode = function decode(z, c) {\n    var output = reverse(c);\n    var Z = 1 << (24 - z);\n    return [ output[0] / Z, output[1] / Z ];\n};\n","// Fast Hilbert curve algorithm by http://threadlocalmutex.com/\n// Ported from C++ https://github.com/rawrunprotected/hilbert_curves (public domain)\nexport default function hilbert(x, y) {\n  let a = x ^ y;\n  let b = 0xFFFF ^ a;\n  let c = 0xFFFF ^ (x | y);\n  let d = x & (y ^ 0xFFFF);\n\n  let A = a | (b >> 1);\n  let B = (a >> 1) ^ a;\n  let C = ((c >> 1) ^ (b & (d >> 1))) ^ c;\n  let D = ((a & (c >> 1)) ^ (d >> 1)) ^ d;\n\n  a = A; b = B; c = C; d = D;\n  A = ((a & (a >> 2)) ^ (b & (b >> 2)));\n  B = ((a & (b >> 2)) ^ (b & ((a ^ b) >> 2)));\n  C ^= ((a & (c >> 2)) ^ (b & (d >> 2)));\n  D ^= ((b & (c >> 2)) ^ ((a ^ b) & (d >> 2)));\n\n  a = A; b = B; c = C; d = D;\n  A = ((a & (a >> 4)) ^ (b & (b >> 4)));\n  B = ((a & (b >> 4)) ^ (b & ((a ^ b) >> 4)));\n  C ^= ((a & (c >> 4)) ^ (b & (d >> 4)));\n  D ^= ((b & (c >> 4)) ^ ((a ^ b) & (d >> 4)));\n\n  a = A; b = B; c = C; d = D;\n  C ^= ((a & (c >> 8)) ^ (b & (d >> 8)));\n  D ^= ((b & (c >> 8)) ^ ((a ^ b) & (d >> 8)));\n\n  a = C ^ (C >> 1);\n  b = D ^ (D >> 1);\n\n  let i0 = x ^ y;\n  let i1 = b | (0xFFFF ^ (i0 | a));\n\n  i0 = (i0 | (i0 << 8)) & 0x00FF00FF;\n  i0 = (i0 | (i0 << 4)) & 0x0F0F0F0F;\n  i0 = (i0 | (i0 << 2)) & 0x33333333;\n  i0 = (i0 | (i0 << 1)) & 0x55555555;\n\n  i1 = (i1 | (i1 << 8)) & 0x00FF00FF;\n  i1 = (i1 | (i1 << 4)) & 0x0F0F0F0F;\n  i1 = (i1 | (i1 << 2)) & 0x33333333;\n  i1 = (i1 | (i1 << 1)) & 0x55555555;\n\n  return ((i1 << 1) | i0) >>> 0;\n}\n","function qsort (data, values, left, right) {\n  if (left >= right) return;\n\n  const pivot = values[(left + right) >> 1];\n  let i = left - 1;\n  let j = right + 1;\n  let temp;\n\n  while (true) {\n    do i++; while (values[i] < pivot);\n    do j--; while (values[j] > pivot);\n    if (i >= j) break;\n\n    // swap(data, values, i, j);\n    temp      = data[i];\n    data[i]   = data[j];\n    data[j]   = temp;\n\n    temp      = values[i];\n    values[i] = values[j];\n    values[j] = temp;\n  }\n\n  qsort(data, values, left, j);\n  qsort(data, values, j + 1, right);\n}\n\nexport default function sort (coords, codes) {\n  return qsort(coords, codes, 0, coords.length - 1);\n}\n","export default class InternalNode {\n  constructor (code, left, right) {\n    this.code   = code;\n    this.left   = left;\n    this.right  = right;\n    left.parent = right.parent = this;\n\n    // this.x0 = Math.min(left.x0, right.x0);\n    // this.y0 = Math.min(left.y0, right.y0);\n    // this.x1 = Math.max(left.x1, right.x1);\n    // this.y1 = Math.max(left.y1, right.y1);\n  }\n}\n","export class Leaf {\n  constructor (code, data) {\n    this.code = code;\n    this.data = data;\n\n    // this.x0 = this.x1 = data[0];\n    // this.y0 = this.y1 = data[1];\n  }\n}\n\n\nexport class BucketLeaf {\n\n  constructor (code, data) {\n    this.code = code;\n    this.data = data;\n    \n    // this.x0 = data.x1 = data[0];\n    // this.y0 = data.y1 = data[1];\n  }\n}\n","export function inOrder (fn, ctx) {\n  let current = this._root;\n  const Q = [];\n  let done = false;\n\n  while (!done) {\n    if (current) {\n      Q.push(current);\n      current = current.left;\n    } else {\n      if (Q.length !== 0) {\n        current = Q.pop();\n        if (fn.call(ctx, current)) break;\n        current = current.right;\n      } else done = true;\n    }\n  }\n  return this;\n}\n\n\nexport function preOrder (fn, ctx) {\n  const Q = [this._root];\n  while (Q.length !== 0)  {\n    const node = Q.pop();\n    if (!fn.call(ctx, node)) {\n      if (node.right) Q.push(node.right);\n      if (node.left)  Q.push(node.left);\n    }\n  }\n  return this;\n}\n\n\nexport function postOrder (fn, ctx) {\n  const Q = [];\n  let node = this._root, last;\n  do {\n    while (node) {\n      if (node.right) Q.push(node.right);\n      Q.push(node);\n      node = node.left;\n    }\n    node = Q.pop();\n    last = Q.length - 1;\n    if (node.right && Q[last] === node.right) {\n      Q[last] = node;\n      node = node.right;\n    } else {\n      fn.call(ctx, node);\n      node = null;\n    }\n  } while (Q.length !== 0);\n\n  return this;\n}\n\n\nexport function map (fn, ctx) {\n  const res = [];\n  this.inOrder(node => {\n    res.push(fn.call(ctx, node));\n  });\n  return res;\n}\n\n\n/**\n   * Tree height\n   * @return {Number}\n   */\nexport function height () {\n  return treeHeight(this._root);\n}\n\n\n  /**\n   * Print tree\n   * @public\n   * @export\n   * @param  {Function(Node):String} [printNode]\n   * @return {String}\n   */\nexport function toString (printNode = (n) => n.code) {\n  const out = [];\n  row(this._root, '', true, (v) => out.push(v), printNode);\n  return out.join('');\n}\n\n\n  /**\n   * Number of nodes\n   * @return {Number}\n   */\nexport function size () {\n  let i = 0;\n  this.preOrder(() => { i++; });\n  return i;\n}\n\n\nfunction treeHeight (node) {\n  return node ? (1 + Math.max(treeHeight(node.left), treeHeight(node.right))) : 0;\n}\n\n\n/**\n * Prints level of the tree\n * @param  {Node}                        root\n * @param  {String}                      prefix\n * @param  {Boolean}                     isTail\n * @param  {Function(in:string):void}    out\n * @param  {Function(node:Node):String}  printNode\n */\nfunction row (root, prefix, isTail, out, printNode) {\n  if (root) {\n    out(prefix + (isTail ? '^-- ' : '|-- ') + printNode(root) + '\\n');\n    const indent = prefix + (isTail ? '    ' : '|   ');\n    if (root.left)  row(root.left,  indent, false, out, printNode);\n    if (root.right) row(root.right, indent, true,  out, printNode);\n  }\n}\n\n\nfunction walk (fn) {\n  const stack = [this._minX, this._minY, this._maxX, this._maxY, 0];\n  const Q = [this._root];\n\n  let i = 0, j = 0;\n  while (Q.length !== 0) {\n    const node = Q.pop();\n\n    const dir  = stack.pop();\n    const ymax = stack.pop();\n    const xmax = stack.pop();\n    const ymin = stack.pop();\n    const xmin = stack.pop();\n\n    if (node) {\n      if (fn(node, xmin, ymin, xmax, ymax)) break;\n      const hw = (xmax - xmin) / 2,\n            hh = (ymax - ymin) / 2;\n      //const nextDir = dir > 0 ? (dir - 1) : 3;\n      const nextDir = (dir + 1) % 2;\n\n      Q.push(node.left, node.right)\n\n      if (nextDir) { // by x\n        stack.push(xmin, ymin, xmin + hw, ymax, nextDir);\n        stack.push(xmin + hw, ymin, xmax, ymax, nextDir);\n      } else {       // by y\n        stack.push(xmin, ymin + hh, xmax, ymax, nextDir);\n        stack.push(xmin, ymin, xmax, ymin + hh, nextDir);\n      }\n    }\n  }\n  return this;\n}\n\n\nfunction query (x0, y0, x1, y1) {\n  const res = [];\n  this.walk((n, xmin, ymin, xmax, ymax) => {\n    if (n.data) res.push(n.data);\n    return !(xmax > x0 && xmin < x1) && (ymax > y0 && ymin < y1);\n  });\n  return res;\n}\n","import morton  from 'morton';\nimport hilbert from './hilbert';\nimport sort    from './sort';\n\nimport InternalNode from './internal_node';\nimport { Leaf, BucketLeaf } from './leaf';\nimport {\n  map, preOrder, postOrder, inOrder,\n  height, size, toString\n} from './traversals';\n\nconst HILBERT = 1;\nconst MORTON  = 0;\n\n/**\n * @typedef {function(*):Number} CoordGetter\n */\n\n\nfunction buildBuckets (data, ids, codes, first, last, bucketSize) {\n  if (last - first <= bucketSize) {\n    const bucket = new Array(last - first + 1);\n    for (let i = first, j = 0; i <= last; i++, j++) bucket[j] = data[ids[i]];\n    return new BucketLeaf(codes[first], bucket);\n  }\n  const split = findSplit(codes, first, last);\n  const left  = buildBuckets(data, ids, codes, first, split, bucketSize);\n  const right = buildBuckets(data, ids, codes, split + 1, last, bucketSize);\n\n  return new InternalNode(split, left, right);\n}\n\n\nfunction build (data, ids, codes, first, last, arr) {\n  if (last - first === 0) return new Leaf(codes[first], data[ids[first]]);\n  const split = findSplit(codes, first, last);\n  //const split = first + ((last - first) >> 1);\n  const left  = build(data, ids, codes, first, split, arr);\n  const right = build(data, ids, codes, split + 1, last, arr);\n  return new InternalNode(split, left, right);\n}\n\n\nclass Node {\n  constructor () {\n    this.code   = 0;\n    //this.parent = parent;\n    this.left   = null;\n    this.right  = null;\n    this.data   = null;\n  }\n}\n\n\nfunction buildIterative (data, ids, codes, start, end) {\n  let root    = new Node();\n  const stack = [root, start, end];\n\n  while (stack.length !== 0) {\n    const last  = stack.pop();\n    const first = stack.pop();\n    const node  = stack.pop();\n\n    if (last - first === 0) {\n      node.code = codes[first];\n      node.data = data[ids[first]];\n    } else {\n      const split = findSplit(codes, first, last);\n      //const split = (first + last) >> 1;\n      node.code = split;\n\n      if (first <= split) {\n        node.left = new Node();\n        stack.push(node.left);\n        stack.push(first, split);\n      }\n\n      if (last > split) {\n        node.right = new Node();\n        stack.push(node.right);\n        stack.push(split + 1, last);\n      }\n    }\n  }\n  return root;\n}\n\n\n\nfunction buildIterativeBuckets (data, ids, codes, start, end, bucketSize) {\n  let root = new Node(null);\n  const Q = [root];\n  const stack = [start, end];\n\n  while (Q.length !== 0) {\n    const last  = stack.pop();\n    const first = stack.pop();\n    const node  = Q.pop();\n\n    if (last - first < bucketSize) {\n      const bucket = new Array(last - first + 1);\n      for (let i = first, j = 0; i <= last; i++, j++) bucket[j] = data[ids[i]];\n      node.code = codes[first];\n      node.data = bucket;\n    } else {\n      const split = findSplit(codes, first, last);\n      node.code = split;\n\n      if (first <= split) {\n        node.left = new Node(split, node);\n        Q.push(node.left);\n        stack.push(first, split);\n      }\n\n      if (last > split) {\n        node.right = new Node(node);\n        Q.push(node.right);\n        stack.push(split + 1, last);\n      }\n    }\n  }\n  return root;\n}\n\n\n// count leading zeroes\nexport function __clz(m) {\n  let c = 1 << 31;\n  for (let i = 0; i < 31; i += 1) {\n    if (c & m) return i;\n    c >>>= 1;\n  }\n  return 32;\n}\n\n\n// https://devblogs.nvidia.com/thinking-parallel-part-iii-tree-construction-gpu/\nexport function findSplit (codes, first, last) {\n  const f = codes[first];\n  const l = codes[last];\n\n  if (f === l) return first;\n\n  // Calculate the number of highest bits that are the same\n  // for all objects, using the count-leading-zeros intrinsic.\n  const commonPrefix = __clz(f ^ l);\n\n  // Use binary search to find where the next bit differs.\n  // Specifically, we are looking for the highest object that\n  // shares more than commonPrefix bits with the first one.\n\n  let split = first; // initial guess\n  let step = last - first, newSplit, splitCode, splitPrefix;\n\n  do {\n    step = (step + 1) >> 1; // exponential decrease\n    newSplit = split + step; // proposed new position\n\n    if (newSplit < last) {\n      splitCode = codes[newSplit];\n      splitPrefix = __clz(f ^ splitCode);\n      if (splitPrefix > commonPrefix) split = newSplit; // accept proposal\n    }\n  } while (step > 1)\n  return split;\n}\n\n\nconst defaultX = p => p.x;\nconst defaultY = p => p.y;\n\n/**\n * @public\n */\nexport default class BVH {\n\n  /**\n   * @constructor\n   * @param  {Array<*>} points\n   * @param  {CoordGetter}   getX\n   * @param  {CoordGetter}   getY\n   * @param  {Number}   bucketSize\n   * @param  {Number}   sfc\n   */\n  constructor (points, {\n    getX = defaultX, getY = defaultY,\n    bucketSize = 0, sfc = HILBERT, recursive = true\n  } = {}) {\n    const n     = points.length;\n    const codes = new Uint32Array(n);\n    let minX = Infinity, minY = Infinity,\n        maxX = -Infinity, maxY = -Infinity;\n    let p, i, x, y;\n\n    /** @type {CoordGetter} */\n    this._x = getX;\n    /** @type {CoordGetter} */\n    this._y = getY;\n\n    const project = sfc === HILBERT ? hilbert : morton;\n    this._project = project;\n\n    const ids = new Uint32Array(n);\n\n    for (i = 0; i < n; i++) {\n      p = points[i];\n      x = getX(p);\n      y = getY(p);\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n      ids[i] = i;\n    }\n\n    /** @type {Number} */\n    this._minX = minX;\n    /** @type {Number} */\n    this._minY = minY;\n    /** @type {Number} */\n    this._maxX = maxX;\n    /** @type {Number} */\n    this._maxY = maxY;\n\n    const max = (1 << 16) - 1;\n    const w = max / (maxX - minX);\n    const h = max / (maxY - minY);\n    this._hw = w;\n    this._hh = h;\n\n    for (i = 0; i < n; i++) {\n      p = points[i];\n      codes[i] = project(w * (getX(p) - minX), h * (getY(p) - minY));\n    }\n    sort(ids, codes);\n\n    if (bucketSize === 0) {\n      this._root = recursive\n        ? build(points, ids, codes, 0, n - 1)\n        : buildIterative(points, ids, codes, 0, n - 1);\n    } else {\n      this._root = recursive\n        ? buildBuckets(points, ids, codes, 0, n - 1, bucketSize)\n        : buildIterativeBuckets(points, ids, codes, 0, n - 1, bucketSize);\n    }\n    /** @type {Number} */\n    this._bucketSize = bucketSize;\n  }\n\n\n  walk (fn) {\n    const stack = [this._minX, this._minY, this._maxX, this._maxY, 0];\n    const Q = [this._root];\n\n    while (Q.length !== 0) {\n      const node = Q.pop();\n\n      const dir  = stack.pop();\n      const ymax = stack.pop();\n      const xmax = stack.pop();\n      const ymin = stack.pop();\n      const xmin = stack.pop();\n\n      if (node) {\n        if (fn(node, xmin, ymin, xmax, ymax)) break;\n        const hw = (xmax - xmin) / 2,\n              hh = (ymax - ymin) / 2;\n        //const nextDir = dir > 0 ? (dir - 1) : 3;\n        const nextDir = (dir + 1) % 2;\n\n        Q.push(node.left, node.right)\n\n        if (nextDir) { // by x\n          stack.push(xmin, ymin, xmin + hw, ymax, nextDir);\n          stack.push(xmin + hw, ymin, xmax, ymax, nextDir);\n        } else {       // by y\n          stack.push(xmin, ymin + hh, xmax, ymax, nextDir);\n          stack.push(xmin, ymin, xmax, ymin + hh, nextDir);\n        }\n      }\n    }\n    return this;\n  }\n\n\n  query (x0, y0, x1, y1) {\n    const res = [];\n    this.walk((n, xmin, ymin, xmax, ymax) => {\n      if (n.data) res.push(n.data);\n      return !(xmax > x0 && xmin < x1) && (ymax > y0 && ymin < y1);\n    });\n    return res;\n  }\n}\n\n\nBVH.prototype.inOrder   = inOrder;\nBVH.prototype.preOrder  = preOrder;\nBVH.prototype.postOrder = postOrder;\nBVH.prototype.map       = map;\nBVH.prototype.height    = height;\nBVH.prototype.size      = size;\nBVH.prototype.toString  = toString;\n\nBVH.SFC = { HILBERT, MORTON };\n","import sort from './sort';\nimport hilbert from './hilbert';\nimport morton from 'morton';\nimport InternalNode from './internal_node';\nimport { BucketLeaf, Leaf } from './leaf';\nimport {\n  map, preOrder, postOrder, inOrder,\n  height, size, toString\n} from './traversals';\n\n\nconst defaultX = d => d.x;\nconst defaultY = d => d.y;\n\n\nfunction build (data, ids, codes, first, last) {\n  if (last - first === 0) return new Leaf(codes[first], data[ids[first]]);\n  const split = (last + first) >> 1;\n  const left  = build(data, ids, codes, first, split);\n  const right = build(data, ids, codes, split + 1, last);\n  // const nd = [left, right];\n  // nd.left = left; nd.right = right;\n  // return nd;\n  return new InternalNode(split, left, right);\n}\n\n/**\n * This is a very interesting decomposition:\n * It splits by equal spans on the space-filling curve.\n * It's super-fast, but the zones are of irregular shapes (tetris-like).\n * It gets worse if you use morton curve.\n */\nexport default class SFCTree {\n\n  constructor (points, { getX = defaultX, getY = defaultY, bucketSize = 0 }) {\n    const n       = points.length;\n    const hvalues = new Array(n);\n    const order   = new Array(n);\n\n    let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\n\n    for (let i = 0; i < n; i++) {\n      const p = points[i];\n      const x = getX(p), y = getY(p)\n      hvalues[i] = hilbert(x, y);\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n      order[i]  = i;\n    }\n    sort(order, hvalues);\n\n    // this._list = toList(points, order, hvalues, this._x, this._y);\n    // this._root = sortedListToBST({ head: this._list }, 0, n);\n    this._minX = minX;\n    this._minY = minY;\n    this._maxX = maxX;\n    this._maxY = maxY;\n\n    this._x = getX;\n    this._y = getY;\n    this._bucketSize = bucketSize;\n\n    this._root = build(points, order, hvalues, 0, n - 1);\n  }\n\n  query () { return [] }\n}\n\n\nSFCTree.prototype.inOrder   = inOrder;\nSFCTree.prototype.preOrder  = preOrder;\nSFCTree.prototype.postOrder = postOrder;\nSFCTree.prototype.map       = map;\nSFCTree.prototype.height    = height;\nSFCTree.prototype.size      = size;\nSFCTree.prototype.toString  = toString;\n","/* follows \"An implementation of top-down splaying\"\n * by D. Sleator <sleator@cs.cmu.edu> March 1992\n */\n\n/**\n * @typedef {*} Key\n */\n\n\n/**\n * @typedef {*} Value\n */\n\n\n/**\n * @typedef {function(node:Node):void} Visitor\n */\n\n\n/**\n * @typedef {function(a:Key, b:Key):number} Comparator\n */\n\n\n/**\n * @param {function(node:Node):string} NodePrinter\n */\n\n\n/**\n * @typedef {Object}  Node\n * @property {Key}    Key\n * @property {Value=} data\n * @property {Node}   left\n * @property {Node}   right\n */\n\nclass Node {\n\n  constructor (key, data) {\n    this.key    = key;\n    this.data   = data;\n    this.left   = null;\n    this.right  = null;\n  }\n}\n\nfunction DEFAULT_COMPARE (a, b) { return a > b ? 1 : a < b ? -1 : 0; }\n\n\n/**\n * Simple top down splay, not requiring i to be in the tree t.\n * @param {Key} i\n * @param {Node?} t\n * @param {Comparator} comparator\n */\nfunction splay (i, t, comparator) {\n  if (t === null) return t;\n  let l, r, y;\n  const N = new Node();\n  l = r = N;\n\n  while (true) {\n    const cmp = comparator(i, t.key);\n    //if (i < t.key) {\n    if (cmp < 0) {\n      if (t.left === null) break;\n      //if (i < t.left.key) {\n      if (comparator(i, t.left.key) < 0) {\n        y = t.left;                           /* rotate right */\n        t.left = y.right;\n        y.right = t;\n        t = y;\n        if (t.left === null) break;\n      }\n      r.left = t;                               /* link right */\n      r = t;\n      t = t.left;\n    //} else if (i > t.key) {\n    } else if (cmp > 0) {\n      if (t.right === null) break;\n      //if (i > t.right.key) {\n      if (comparator(i, t.right.key) > 0) {\n        y = t.right;                          /* rotate left */\n        t.right = y.left;\n        y.left = t;\n        t = y;\n        if (t.right === null) break;\n      }\n      l.right = t;                              /* link left */\n      l = t;\n      t = t.right;\n    } else {\n      break;\n    }\n  }\n  /* assemble */\n  l.right = t.left;\n  r.left = t.right;\n  t.left = N.right;\n  t.right = N.left;\n  return t;\n}\n\n\n/**\n * @param  {Key}        i\n * @param  {Value}      data\n * @param  {Comparator} comparator\n * @param  {Tree}       tree\n * @return {Node}      root\n */\nfunction insert (i, data, t, comparator, tree) {\n  const node = new Node(i, data);\n\n  tree._size++;\n\n  if (t === null) {\n    node.left = node.right = null;\n    return node;\n  }\n\n  t = splay(i, t, comparator);\n  const cmp = comparator(i, t.key);\n  if (cmp < 0) {\n    node.left = t.left;\n    node.right = t;\n    t.left = null;\n  } else if (cmp >= 0) {\n    node.right = t.right;\n    node.left = t;\n    t.right = null;\n  }\n  return node;\n}\n\n\n/**\n * Insert i into the tree t, unless it's already there.\n * @param  {Key}        i\n * @param  {Value}      data\n * @param  {Comparator} comparator\n * @param  {Tree}       tree\n * @return {Node}       root\n */\nfunction add (i, data, t, comparator, tree) {\n  const node = new Node(i, data);\n\n  if (t === null) {\n    node.left = node.right = null;\n    tree._size++;\n    return node;\n  }\n\n  t = splay(i, t, comparator);\n  const cmp = comparator(i, t.key);\n  if (cmp === 0) return t;\n  else {\n    if (cmp < 0) {\n      node.left = t.left;\n      node.right = t;\n      t.left = null;\n    } else if (cmp > 0) {\n      node.right = t.right;\n      node.left = t;\n      t.right = null;\n    }\n    tree._size++;\n    return node;\n  }\n}\n\n\n/**\n * Deletes i from the tree if it's there\n * @param {Key}        i\n * @param {Tree}       tree\n * @param {Comparator} comparator\n * @param {Tree}       tree\n * @return {Node}      new root\n */\nfunction remove (i, t, comparator, tree) {\n  let x;\n  if (t === null) return null;\n  t = splay(i, t, comparator);\n  if (i === t.key) {               /* found it */\n    if (t.left === null) {\n      x = t.right;\n    } else {\n      x = splay(i, t.left, comparator);\n      x.right = t.right;\n    }\n    tree._size--;\n    return x;\n  }\n  return t;                         /* It wasn't there */\n}\n\n\nfunction split (key, v, comparator) {\n  let left, right;\n  if (v === null) {\n    left = right = null;\n  } else {\n    v = splay(key, v, comparator);\n\n    const cmp = comparator(v.key, key);\n    if (cmp === 0) {\n      left  = v.left;\n      right = v.right;\n    } else if (cmp < 0) {\n      right   = v.right;\n      v.right = null;\n      left    = v;\n    } else {\n      left   = v.left;\n      v.left = null;\n      right  = v;\n    }\n  }\n  return { left, right };\n}\n\n\nfunction merge (left, right, comparator) {\n  if (right === null) return left;\n  if (left  === null) return right;\n\n  right = splay(left.key, right, comparator);\n  right.left = left;\n  return right;\n}\n\n\n/**\n * Prints level of the tree\n * @param  {Node}                        root\n * @param  {String}                      prefix\n * @param  {Boolean}                     isTail\n * @param  {Array<string>}               out\n * @param  {Function(node:Node):String}  printNode\n */\nfunction printRow (root, prefix, isTail, out, printNode) {\n  if (root) {\n    out(`${ prefix }${ isTail ? '└── ' : '├── ' }${ printNode(root) }\\n`);\n    const indent = prefix + (isTail ? '    ' : '│   ');\n    if (root.left)  printRow(root.left,  indent, false, out, printNode);\n    if (root.right) printRow(root.right, indent, true,  out, printNode);\n  }\n}\n\n\nexport default class Tree {\n\n  constructor (comparator = DEFAULT_COMPARE) {\n    this._comparator = comparator;\n    this._root = null;\n    this._size = 0;\n  }\n\n\n  /**\n   * Inserts a key, allows duplicates\n   * @param  {Key}    key\n   * @param  {Value=} data\n   * @return {Node|null}\n   */\n  insert (key, data) {\n    return this._root = insert(key, data, this._root, this._comparator, this);\n  }\n\n\n  /**\n   * Adds a key, if it is not present in the tree\n   * @param  {Key}    key\n   * @param  {Value=} data\n   * @return {Node|null}\n   */\n  add (key, data) {\n    return this._root = add(key, data, this._root, this._comparator, this);\n  }\n\n\n  /**\n   * @param  {Key} key\n   * @return {Node|null}\n   */\n  remove (key) {\n    this._root = remove(key, this._root, this._comparator, this);\n  }\n\n\n  /**\n   * Removes and returns the node with smallest key\n   * @return {?Node}\n   */\n  pop () {\n    let node = this._root;\n    if (node) {\n      while (node.left) node = node.left;\n      this._root = splay(node.key,  this._root, this._comparator);\n      this._root = remove(node.key, this._root, this._comparator, this);\n      return { key: node.key, data: node.data };\n    }\n    return null;\n  }\n\n\n  /**\n   * @param  {Key} key\n   * @return {Node|null}\n   */\n  findStatic (key) {\n    let current   = this._root;\n    const compare = this._comparator;\n    while (current) {\n      const cmp = compare(key, current.key);\n      if (cmp === 0)    return current;\n      else if (cmp < 0) current = current.left;\n      else              current = current.right;\n    }\n    return null;\n  }\n\n\n  /**\n   * @param  {Key} key\n   * @return {Node|null}\n   */\n  find (key) {\n    if (this._root) {\n      this._root = splay(key, this._root, this._comparator);\n      if (this._comparator(key, this._root.key) !== 0) return null;\n    }\n    return this._root;\n  }\n\n\n  /**\n   * @param  {Key} key\n   * @return {Boolean}\n   */\n  contains (key) {\n    let current   = this._root;\n    const compare = this._comparator;\n    while (current) {\n      const cmp = compare(key, current.key);\n      if (cmp === 0)    return true;\n      else if (cmp < 0) current = current.left;\n      else              current = current.right;\n    }\n    return false;\n  }\n\n\n  /**\n   * @param  {Visitor} visitor\n   * @param  {*=}      ctx\n   * @return {SplayTree}\n   */\n  forEach (visitor, ctx) {\n    let current = this._root;\n    const Q = [];  /* Initialize stack s */\n    let done = false;\n\n    while (!done) {\n      if (current !==  null) {\n        Q.push(current);\n        current = current.left;\n      } else {\n        if (Q.length !== 0) {\n          current = Q.pop();\n          visitor.call(ctx, current);\n\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return this;\n  }\n\n\n  /**\n   * Walk key range from `low` to `high`. Stops if `fn` returns a value.\n   * @param  {Key}      low\n   * @param  {Key}      high\n   * @param  {Function} fn\n   * @param  {*?}       ctx\n   * @return {SplayTree}\n   */\n  range (low, high, fn, ctx) {\n    const Q = [];\n    const compare = this._comparator;\n    let node = this._root, cmp;\n\n    while (Q.length !== 0 || node) {\n      if (node) {\n        Q.push(node);\n        node = node.left;\n      } else {\n        node = Q.pop();\n        cmp = compare(node.key, high);\n        if (cmp > 0) {\n          break;\n        } else if (compare(node.key, low) >= 0) {\n          if (fn.call(ctx, node)) return this; // stop if smth is returned\n        }\n        node = node.right;\n      }\n    }\n    return this;\n  }\n\n\n  /**\n   * Returns array of keys\n   * @return {Array<Key>}\n   */\n  keys () {\n    const keys = [];\n    this.forEach(({ key }) => keys.push(key));\n    return keys;\n  }\n\n\n  /**\n   * Returns array of all the data in the nodes\n   * @return {Array<Value>}\n   */\n  values () {\n    const values = [];\n    this.forEach(({ data }) => values.push(data));\n    return values;\n  }\n\n\n  /**\n   * @return {Key|null}\n   */\n  min() {\n    if (this._root) return this.minNode(this._root).key;\n    return null;\n  }\n\n\n  /**\n   * @return {Key|null}\n   */\n  max() {\n    if (this._root) return this.maxNode(this._root).key;\n    return null;\n  }\n\n\n  /**\n   * @return {Node|null}\n   */\n  minNode(t = this._root) {\n    if (t) while (t.left) t = t.left;\n    return t;\n  }\n\n\n  /**\n   * @return {Node|null}\n   */\n  maxNode(t = this._root) {\n    if (t) while (t.right) t = t.right;\n    return t;\n  }\n\n\n  /**\n   * Returns node at given index\n   * @param  {number} index\n   * @return {?Node}\n   */\n  at (index) {\n    let current = this._root, done = false, i = 0;\n    const Q = [];\n\n    while (!done) {\n      if (current) {\n        Q.push(current);\n        current = current.left;\n      } else {\n        if (Q.length > 0) {\n          current = Q.pop();\n          if (i === index) return current;\n          i++;\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return null;\n  }\n\n\n  /**\n   * @param  {Node}   d\n   * @return {Node|null}\n   */\n  next (d) {\n    let root = this._root;\n    let successor = null;\n\n    if (d.right) {\n      successor = d.right;\n      while (successor.left) successor = successor.left;\n      return successor;\n    }\n\n    const comparator = this._comparator;\n    while (root) {\n      const cmp = comparator(d.key, root.key);\n      if (cmp === 0) break;\n      else if (cmp < 0) {\n        successor = root;\n        root = root.left;\n      } else root = root.right;\n    }\n\n    return successor;\n  }\n\n\n  /**\n   * @param  {Node} d\n   * @return {Node|null}\n   */\n  prev (d) {\n    let root = this._root;\n    let predecessor = null;\n\n    if (d.left !== null) {\n      predecessor = d.left;\n      while (predecessor.right) predecessor = predecessor.right;\n      return predecessor;\n    }\n\n    const comparator = this._comparator;\n    while (root) {\n      const cmp = comparator(d.key, root.key);\n      if (cmp === 0) break;\n      else if (cmp < 0) root = root.left;\n      else {\n        predecessor = root;\n        root = root.right;\n      }\n    }\n    return predecessor;\n  }\n\n\n  /**\n   * @return {SplayTree}\n   */\n  clear() {\n    this._root = null;\n    this._size = 0;\n    return this;\n  }\n\n\n  /**\n   * @return {NodeList}\n   */\n  toList() {\n    return toList(this._root);\n  }\n\n\n  /**\n   * Bulk-load items. Both array have to be same size\n   * @param  {Array<Key>}    keys\n   * @param  {Array<Value>}  [values]\n   * @param  {Boolean}       [presort=false] Pre-sort keys and values, using\n   *                                         tree's comparator. Sorting is done\n   *                                         in-place\n   * @return {AVLTree}\n   */\n  load (keys = [], values = [], presort = false) {\n    let size = keys.length;\n    const comparator = this._comparator;\n\n    // sort if needed\n    if (presort) sort(keys, values, 0, size - 1, comparator);\n\n    if (this._root === null) { // empty tree\n      this._root = loadRecursive(this._root, keys, values, 0, size);\n      this._size = size;\n    } else { // that re-builds the whole tree from two in-order traversals\n      const mergedList = mergeLists(this.toList(), createList(keys, values), comparator);\n      size = this._size + size;\n      this._root = sortedListToBST({ head: mergedList }, 0, size);\n    }\n    return this;\n  }\n\n\n  /**\n   * @return {Boolean}\n   */\n  isEmpty() { return this._root === null; }\n\n  get size () { return this._size; }\n\n\n  /**\n   * @param  {NodePrinter=} printNode\n   * @return {String}\n   */\n  toString (printNode = (n) => n.key) {\n    const out = [];\n    printRow(this._root, '', true, (v) => out.push(v), printNode);\n    return out.join('');\n  }\n\n\n  update (key, newKey, newData) {\n    const comparator = this._comparator;\n    let { left, right } = split(key, this._root, comparator);\n    this._size--;\n    if (comparator(key, newKey) < 0) {\n      right = insert(newKey, newData, right, comparator, this);\n    } else {\n      left = insert(newKey, newData, left, comparator, this);\n    }\n    this._root = merge(left, right, comparator);\n  }\n\n\n  split(key) {\n    return split(key, this._root, this._comparator);\n  }\n}\n\n\nfunction loadRecursive (parent, keys, values, start, end) {\n  const size = end - start;\n  if (size > 0) {\n    const middle = start + Math.floor(size / 2);\n    const key    = keys[middle];\n    const data   = values[middle];\n    const node   = { key, data, parent };\n    node.left    = loadRecursive(node, keys, values, start, middle);\n    node.right   = loadRecursive(node, keys, values, middle + 1, end);\n    return node;\n  }\n  return null;\n}\n\n\nfunction createList(keys, values) {\n  const head = { next: null };\n  let p = head;\n  for (let i = 0; i < keys.length; i++) {\n    p = p.next = { key: keys[i], data: values[i] };\n  }\n  p.next = null;\n  return head.next;\n}\n\n\nfunction toList (root) {\n  var current = root;\n  var Q = [], done = false;\n\n  const head = { next: null };\n  let p = head;\n\n  while (!done) {\n    if (current) {\n      Q.push(current);\n      current = current.left;\n    } else {\n      if (Q.length > 0) {\n        current = p = p.next = Q.pop();\n        current = current.right;\n      } else done = true;\n    }\n  }\n  p.next = null; // that'll work even if the tree was empty\n  return head.next;\n}\n\n\nfunction sortedListToBST(list, start, end) {\n  const size = end - start;\n  if (size > 0) {\n    const middle = start + Math.floor(size / 2);\n    const left = sortedListToBST(list, start, middle);\n\n    const root = list.head;\n    root.left = left;\n\n    list.head = list.head.next;\n\n    root.right = sortedListToBST(list, middle + 1, end);\n    return root;\n  }\n  return null;\n}\n\n\nfunction mergeLists (l1, l2, compare = (a, b) => a - b) {\n  const head = {}; // dummy\n  let p = head;\n\n  let p1 = l1;\n  let p2 = l2;\n\n  while (p1 !== null && p2 !== null) {\n    if (compare(p1.key, p2.key) < 0) {\n      p.next = p1;\n      p1 = p1.next;\n    } else {\n      p.next = p2;\n      p2 = p2.next;\n    }\n    p = p.next;\n  }\n\n  if (p1 !== null)      p.next = p1;\n  else if (p2 !== null) p.next = p2;\n\n  return head.next;\n}\n\n\nfunction sort(keys, values, left, right, compare) {\n  if (left >= right) return;\n\n  const pivot = keys[(left + right) >> 1];\n  let i = left - 1;\n  let j = right + 1;\n\n  while (true) {\n    do i++; while (compare(keys[i], pivot) < 0);\n    do j--; while (compare(keys[j], pivot) > 0);\n    if (i >= j) break;\n\n    let tmp = keys[i];\n    keys[i] = keys[j];\n    keys[j] = tmp;\n\n    tmp = values[i];\n    values[i] = values[j];\n    values[j] = tmp;\n  }\n\n  sort(keys, values,  left,     j, compare);\n  sort(keys, values, j + 1, right, compare);\n}\n","import BST from 'splaytree';\nimport morton from 'morton';\nimport hilbert from './hilbert';\n\nimport {\n  map, preOrder, postOrder, inOrder,\n  height, size, toString\n} from './traversals';\n\n\nconst defaultGetX = d => d.x;\nconst defaultGetY = d => d.y;\n\nconst HILBERT = 1;\nconst MORTON = 2;\n\n\nexport default class UBTree {\n\n\tconstructor (data, getX = defaultGetX, getY = defaultGetY, sfc = HILBERT) {\n\t\tthis._tree = new BST();\n\n    const n = data.length;\n    let minX = Infinity, minY = Infinity,\n        maxX = -Infinity, maxY = -Infinity;\n    let p, i, x, y;\n\n    this._x = getX;\n    this._y = getY;\n\n    const project = sfc === HILBERT ? hilbert : morton;\n    this._project = project;\n\n    for (i = 0; i < n; i++) {\n      p = data[i];\n      x = getX(p);\n      y = getY(p);\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n    }\n\n    this._minX = minX;\n    this._minY = minY;\n    this._maxX = maxX;\n    this._maxY = maxY;\n\n    const max = (1 << 16) - 1;\n    const w = max / (maxX - minX);\n    const h = max / (maxY - minY);\n\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tp = data[i];\n\t\t\tthis._tree.insert(project(w * (getX(p) - minX), h * (getY(p) - minY)), p);\n\t\t}\n\n\t\tthis._root = this._tree._root;\n\t}\n}\n\n\nUBTree.prototype.inOrder   = inOrder;\nUBTree.prototype.preOrder  = preOrder;\nUBTree.prototype.postOrder = postOrder;\nUBTree.prototype.map       = map;\nUBTree.prototype.height    = height;\nUBTree.prototype.size      = size;\nUBTree.prototype.toString  = toString;","import morton  from 'morton';\nimport hilbert from './hilbert';\nimport sort    from './sort';\n\nimport InternalNode from './internal_node';\nimport { Leaf, BucketLeaf } from './leaf';\nimport {\n  map, preOrder, postOrder, inOrder,\n  height, size, toString\n} from './traversals';\n\nconst HILBERT = 1;\nconst MORTON  = 0;\n\n/**\n * @typedef {function(*):Number} CoordGetter\n */\n\n\nfunction buildBuckets (data, ids, codes, first, last, bucketSize) {\n  if (last - first <= bucketSize) {\n    const bucket = new Array(last - first + 1);\n    for (let i = first, j = 0; i <= last; i++, j++) bucket[j] = data[ids[i]];\n    return new BucketLeaf(codes[first], bucket);\n  }\n  const split = findSplit(codes, first, last);\n  const left  = buildBuckets(data, ids, codes, first, split, bucketSize);\n  const right = buildBuckets(data, ids, codes, split + 1, last, bucketSize);\n\n  return new InternalNode(split, left, right);\n}\n\n\nfunction build (data, ids, codes, first, last, arr) {\n  if (last - first === 0) return new Leaf(codes[first], data[ids[first]]);\n  const split = findSplit(codes, first, last);\n  //const split = first + ((last - first) >> 1);\n  const left  = build(data, ids, codes, first, split, arr);\n  const right = build(data, ids, codes, split + 1, last, arr);\n  return new InternalNode(split, left, right);\n}\n\n\n\n\nclass Node {\n  constructor () {\n    this.code   = 0;\n    //this.parent = parent;\n    this.left   = null;\n    this.right  = null;\n    this.data   = null;\n  }\n}\n\n\nfunction buildIterative (data, ids, codes, start, end) {\n  let root    = new Node();\n  let parent  = null;\n  const stack = [root, start, end];\n\n  while (stack.length !== 0) {\n    const last  = stack.pop();\n    const first = stack.pop();\n    const node  = stack.pop();\n\n    if (last - first === 0) {\n      node.code = codes[first];\n      node.data = data[ids[first]];\n    } else {\n      const split = findSplit(codes, first, last);\n      //const split = (first + last) >> 1;\n      node.code = split;\n\n      if (first <= split) {\n        node.left = new Node();\n        stack.push(node.left);\n        stack.push(first, split);\n      }\n\n      if (last > split) {\n        node.right = new Node();\n        stack.push(node.right);\n        stack.push(split + 1, last);\n      }\n    }\n  }\n  return root;\n}\n\n\nfunction buildIterativeBuckets (data, ids, codes, start, end, bucketSize) {\n  let root = new Node(null);\n  let parent = null;\n  const Q = [root];\n  const stack = [start, end];\n\n  while (Q.length !== 0) {\n    const last  = stack.pop();\n    const first = stack.pop();\n    const node  = Q.pop();\n\n    if (last - first < bucketSize) {\n      const bucket = new Array(last - first + 1);\n      for (let i = first, j = 0; i <= last; i++, j++) bucket[j] = data[ids[i]];\n      node.code = codes[first];\n      node.data = bucket;\n    } else {\n      const split = findSplit(codes, first, last);\n      node.code = split;\n\n      if (first <= split) {\n        node.left = new Node(split, node);\n        Q.push(node.left);\n        stack.push(first, split);\n      }\n\n      if (last > split) {\n        node.right = new Node(node);\n        Q.push(node.right);\n        stack.push(split + 1, last);\n      }\n    }\n  }\n  return root;\n}\n\n\n// count leading zeroes\nexport function __clz(m) {\n  let c = 1 << 31;\n  for (let i = 0; i < 31; i += 1) {\n    if (c & m) return i;\n    c >>>= 1;\n  }\n  return 32;\n}\n\n\n// https://devblogs.nvidia.com/thinking-parallel-part-iii-tree-construction-gpu/\nexport function findSplit (codes, first, last) {\n  const f = codes[first];\n  const l = codes[last];\n\n  if (f === l) return first;\n\n  // Calculate the number of highest bits that are the same\n  // for all objects, using the count-leading-zeros intrinsic.\n  const commonPrefix = __clz(f ^ l);\n\n  // Use binary search to find where the next bit differs.\n  // Specifically, we are looking for the highest object that\n  // shares more than commonPrefix bits with the first one.\n\n  let split = first; // initial guess\n  let step = last - first, newSplit, splitCode, splitPrefix;\n\n  do {\n    step = (step + 1) >> 1; // exponential decrease\n    newSplit = split + step; // proposed new position\n\n    if (newSplit < last) {\n      splitCode = codes[newSplit];\n      splitPrefix = __clz(f ^ splitCode);\n      if (splitPrefix > commonPrefix) split = newSplit; // accept proposal\n    }\n  } while (step > 1)\n  return split;\n}\n\n\nconst defaultX = p => p.x;\nconst defaultY = p => p.y;\n\n/**\n * @public\n */\nexport default class BVH {\n\n  /**\n   * @constructor\n   * @param  {Array<*>} points\n   * @param  {CoordGetter}   getX\n   * @param  {CoordGetter}   getY\n   * @param  {Number}   bucketSize\n   * @param  {Number}   sfc\n   */\n  constructor (points, {\n    getX = defaultX, getY = defaultY,\n    bucketSize = 0, sfc = HILBERT, recursive = true\n  } = {}) {\n    const n     = points.length;\n    const codes = new Uint32Array(n);\n    let minX = Infinity, minY = Infinity,\n        maxX = -Infinity, maxY = -Infinity;\n    let p, i, x, y;\n\n    /** @type {CoordGetter} */\n    this._x = getX;\n    /** @type {CoordGetter} */\n    this._y = getY;\n\n    const project = sfc === HILBERT ? hilbert : morton;\n    this._project = project;\n\n    const ids = new Uint32Array(n);\n\n    for (i = 0; i < n; i++) {\n      p = points[i];\n      x = getX(p);\n      y = getY(p);\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n      ids[i] = i;\n    }\n\n    /** @type {Number} */\n    this._minX = minX;\n    /** @type {Number} */\n    this._minY = minY;\n    /** @type {Number} */\n    this._maxX = maxX;\n    /** @type {Number} */\n    this._maxY = maxY;\n\n    const max = (1 << 16) - 1;\n    const w = max / (maxX - minX);\n    const h = max / (maxY - minY);\n    this._hw = w;\n    this._hh = h;\n\n    for (i = 0; i < n; i++) {\n      p = points[i];\n      codes[i] = project(w * (getX(p) - minX), h * (getY(p) - minY));\n    }\n    //sort(ids, codes);\n\n    const LUT = new Set();\n    const Q = new Array(n);\n    // here the quadtree can be capped too\n    for (i = 0; i < n; i++) {\n      Q[i] = { code: codes[i], id: ids[i], leaf: true };\n    }\n\n    while (Q.length) {\n      const node = Q.pop();\n      const code = node.code;\n\n      if (code === 0) {\n        this._root = node;\n        continue;\n      }\n      const pcode = code >>> 2;\n      const quad = code & 3;\n\n      let parent = LUT[pcode];\n      if (!parent) {\n        parent = LUT[pcode] = new Array(4);\n        parent.code = pcode;\n        Q.push(parent);\n      }\n      parent[quad] = node;\n    }\n\n    // if (bucketSize === 0) {\n    //   this._root = recursive\n    //     ? build(points, ids, codes, 0, n - 1)\n    //     : buildIterative(points, ids, codes, 0, n - 1);\n    // } else {\n    //   this._root = recursive\n    //     ? buildBuckets(points, ids, codes, 0, n - 1, bucketSize)\n    //     : buildIterativeBuckets(points, ids, codes, 0, n - 1, bucketSize);\n    // }\n    /** @type {Number} */\n    this._bucketSize = bucketSize;\n  }\n\n\n  walk (fn) {\n    const stack = [this._minX, this._minY, this._maxX, this._maxY, 0];\n    const Q = [this._root];\n\n    let i = 0, j = 0;\n    while (Q.length !== 0) {\n      const node = Q.pop();\n\n      const dir  = stack.pop();\n      const ymax = stack.pop();\n      const xmax = stack.pop();\n      const ymin = stack.pop();\n      const xmin = stack.pop();\n\n      if (node) {\n        if (fn(node, xmin, ymin, xmax, ymax)) break;\n        const hw = (xmax - xmin) / 2,\n              hh = (ymax - ymin) / 2;\n        //const nextDir = dir > 0 ? (dir - 1) : 3;\n        const nextDir = (dir + 1) % 2;\n\n        Q.push(node.left, node.right)\n\n        if (nextDir) { // by x\n          stack.push(xmin, ymin, xmin + hw, ymax, nextDir);\n          stack.push(xmin + hw, ymin, xmax, ymax, nextDir);\n        } else {       // by y\n          stack.push(xmin, ymin + hh, xmax, ymax, nextDir);\n          stack.push(xmin, ymin, xmax, ymin + hh, nextDir);\n        }\n      }\n    }\n    return this;\n  }\n\n\n  leafs () {\n    const d = [];\n    const Q = [this._root];\n    while (Q.length !== 0) {\n      const node = Q.pop();\n      if (node) {\n        if (node.leaf) d.push(node);\n        else Q.push.apply(Q, node);\n      }\n    }\n    return d;\n  }\n\n\n  query (x0, y0, x1, y1) {\n    const res = [];\n    this.walk((n, xmin, ymin, xmax, ymax) => {\n      if (n.data) res.push(n.data);\n      return !(xmax > x0 && xmin < x1) && (ymax > y0 && ymin < y1);\n    });\n    return res;\n  }\n}\n\n\nBVH.prototype.inOrder   = inOrder;\nBVH.prototype.preOrder  = preOrder;\nBVH.prototype.postOrder = postOrder;\nBVH.prototype.map       = map;\nBVH.prototype.height    = height;\nBVH.prototype.size      = size;\nBVH.prototype.toString  = toString;\n\nBVH.SFC = { HILBERT, MORTON };\n","import seedrandom from 'seedrandom';\nimport bvh from '../src/bvh';\nimport sfctree from '../src/sfc-tree';\nimport ubtree from '../src/ubtree';\nimport bq from '../src/bottom-up';\nimport { minDisc } from '../src/mindisc';\n\nMath.seedrandom('query');\n\nvar svg = d3.select(\"svg\");\nvar width  = document.documentElement.clientWidth;\nvar height = document.documentElement.clientHeight;\nsvg.attr(\"width\", width);\nsvg.attr(\"height\", height);\nvar selected;\n\nvar random = Math.random, n = 2500;\n\nvar data = window.data = d3.range(n).map(function() {\n  return [random() * width, random() * height];\n});\n// var data = new Array(n).fill(0).map((_, i) => {\n//   return i < (n / 2) ?\n//     [width / 4 * random(), height / 4 * random()] :\n//     [width * random(), height * random()];\n// });\n\n// const cells = Math.sqrt(n) | 0;\n// let x = width / cells / 2, y = -height / cells / 2;\n// const data = new Array(n).fill(0).map((_, i) => {\n//   if (i % cells === 0) {\n//     y += height / cells;\n//     x = width / cells / 2;\n//   }\n//   const pt = [ x, y ];\n//   x += width / cells;\n//   return pt;\n// });\n\nconst nodeSize = /bucket/.test(window.location.hash) ? (Math.log(n) | 0) : 0;\nconsole.time('build');\nvar tree = new bvh(data, { getX: p => p[0], getY: p => p[1], bucketSize: nodeSize, sfc: 0 });\nconsole.timeEnd('build');\n\nconsole.time('build sfc');\nwindow.stree = new sfctree(data, { getX: p => p[0], getY: p => p[1], bucketSize: nodeSize });\n//tree = window.stree;\nconsole.timeEnd('build sfc');\n//tree = window.stree;\n\nconsole.time('quadtree');\nvar quadtree = new d3.quadtree(data, p => p[0], p => p[1]);\nconsole.timeEnd('quadtree');\n\nconsole.time('hilbert');\nwindow.b = new bq(data, { getX: p => p[0], getY: p => p[1] });\nconsole.timeEnd('hilbert');\n\nconsole.time('ubtree');\nvar u = new ubtree(data, p => p[0], p => p[1]);\nu.query = () => [];\n//tree = u;\nconsole.timeEnd('ubtree');\nwindow.u = u;\nwindow.tree = tree;\nwindow.bvh = bvh;\nwindow.quadtree = quadtree;\n\nsvg\n  .append('path')\n  .attr('d', d3.line()\n    .x(d => d[0])\n    .y(d => d[1])(getData(tree)))\n  .attr('stroke-width', 2)\n  .attr('fill', 'none')\n  .attr('stroke', 'darkblue')\n  .attr('stroke-opacity', 0.25);\n\nvar brush = d3.brush()\n    .on(\"brush\", brushed);\n\nvar point = svg.selectAll(\".point\")\n  .data(data)\n  .enter().append(\"circle\")\n    .attr(\"class\", \"point\")\n    .attr(\"cx\", d => d[0])\n    .attr(\"cy\", d => d[1])\n    .attr(\"r\", 2);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"brush\")\n    .call(brush)\n    .call(brush.move, [[100, 100], [200, 200]]);\n\nfunction brushed() {\n  var extent = d3.event.selection;\n  point.each(function(d) { d.scanned = d.selected = false; });\n  search(tree, extent[0][0], extent[0][1], extent[1][0], extent[1][1]);\n  point.classed(\"point--scanned\", function(d) { return d.scanned; });\n  point.classed(\"point--selected\", function(d) { return d.selected; });\n  point.classed(\"point--focus\", function(d) { return d.focus; });\n}\n\nfunction clear() {\n  data.map(p => p.scanned = p.selected = false);\n  show();\n}\n\nfunction show () {\n  point.classed(\"point--selected\", function(d) { return d.selected; });\n  point.classed(\"point--scanned\", function(d) { return d.scanned; });\n  point.classed(\"point--focus\", function(d) { return d.focus; });\n}\n\n// Find the nodes within the specified rectangle.\nfunction search(tree, x0, y0, x3, y3) {\n  tree.query(x0, y0, x3, y3).map((point) => {\n    point.selected = true;\n  });\n  // quadtree.visit(function(node, x1, y1, x2, y2) {\n  //   if (!node.length) {\n  //     do {\n  //       var d = node.data;\n  //       d.scanned = true;\n  //       d.selected = (d[0] >= x0) && (d[0] < x3) && (d[1] >= y0) && (d[1] < y3);\n  //     } while (node = node.next);\n  //   }\n  //   return x1 >= x3 || y1 >= y3 || x2 < x0 || y2 < y0;\n  // });\n}\n\n// Collapse the quadtree into an array of rectangles.\nfunction nodes(tree) {\n  var nodes = [];\n  // tree.walk((node, x0, y0, x1, y1) => {\n  //   node.x0 = x0, node.y0 = y0;\n  //   node.x1 = x1, node.y1 = y1;\n  //   nodes.push(node);\n  // });\n  const collect = tree._bucketSize === 0\n    ? n => { if (!n.data) nodes.push(n); }\n    : n => { nodes.push(n); };\n  tree.postOrder(getTightBoxes);\n  tree.preOrder(collect);\n  return nodes;\n}\n\nfunction nodesUB(tree) {\n  var nodes = [];\n  // tree.walk((node, x0, y0, x1, y1) => {\n  //   node.x0 = x0, node.y0 = y0;\n  //   node.x1 = x1, node.y1 = y1;\n  //   nodes.push(node);\n  // });\n  tree.postOrder(getTightBoxesBST);\n  tree.preOrder(n => { nodes.push(n); });\n  return nodes;\n}\n\n\nfunction visit (n, fn) {\n  if (n) {\n    visit(n.left, fn);\n    if (n.data) fn(n.data);\n    visit(n.right, fn);\n  }\n}\n\n\nfunction accumulate(node) {\n  let mass = 0;\n  if (node.data) mass += 1; // or get mass otherwise\n  else {\n    if (node.left && node.left.mass)  mass += node.left.mass;\n    if (node.left && node.right.mass) mass += node.right.mass;\n  }\n  node.mass = mass;\n}\n\nfunction getTightBoxes(node) {\n  let xmin = tree._maxX, ymin = tree._maxY,\n      xmax = tree._minX, ymax = tree._minY;\n  if (node.data) {\n    //const data = node.data;\n    if (tree._bucketSize !== 0) {\n      for (let i = 0; i < node.data.length; i++) {\n        const data = node.data[i];\n        const x = tree._x(data), y = tree._y(data);\n        xmin = Math.min(xmin, x);\n        ymin = Math.min(ymin, y);\n        xmax = Math.max(xmax, x);\n        ymax = Math.max(ymax, y);\n      }\n    } else {\n      xmin = xmax = tree._x(node.data);\n      ymin = ymax = tree._y(node.data);\n    }\n  } else {\n    let child = node.left;\n    if (child) {\n      xmin = Math.min(xmin, child.x0);\n      ymin = Math.min(ymin, child.y0);\n      xmax = Math.max(xmax, child.x1);\n      ymax = Math.max(ymax, child.y1);\n    }\n    child = node.right;\n    if (child) {\n      xmin = Math.min(xmin, child.x0);\n      ymin = Math.min(ymin, child.y0);\n      xmax = Math.max(xmax, child.x1);\n      ymax = Math.max(ymax, child.y1);\n    }\n  }\n\n  node.x0 = xmin;\n  node.y0 = ymin;\n  node.x1 = xmax;\n  node.y1 = ymax;\n}\n\n\nfunction getData(tree) {\n  const data = [];\n  tree.preOrder(n => {\n    if (n.data) {\n      if (tree._bucketSize !== 0) data.push.apply(data, n.data);\n      else data.push(n.data);\n    }\n  });\n  return data;\n}\n\n\nconsole.time('bbox');\ntree.postOrder(getTightBoxes);\nconsole.timeEnd('bbox');\n\n\nconsole.time('circles');\ntree.postOrder((node) => {\n  let cx, cy, r, m, child;\n  if (node.data) {\n    if (tree._bucketSize) {\n      //const circle = minDisc(node.data, [], node.data.length, tree._x, tree._y, () => 1);\n      let ccx = 0, ccy = 0, x, y, rr;\n      let minx = Infinity, miny = Infinity,\n          maxx = -Infinity, maxy = -Infinity;\n      for (let i = 0; i < node.data.length; i++) {\n        const id = node.data[i];\n        x = tree._x(id); y = tree._y(id); rr = 5;\n        ccx += 1 * x;\n        ccy += 1 * y;\n        if (x + rr > maxx) maxx = x + rr;\n        if (y + rr > maxy) maxy = y + rr;\n        if (x - rr < minx) minx = x - rr;\n        if (y - rr < miny) miny = y - rr;\n      }\n\n      m = node.data.length; // mass\n      cx = ccx / m;\n      cy = ccy / m;\n      r = Math.max(\n        Math.abs(cx - minx), Math.abs(maxx - cx),\n        Math.abs(cy - miny), Math.abs(maxy - cy)\n      );\n\n      //cx = circle[0]; cy = circle[1]; r = circle[2];\n\n    } else {\n      cx = tree._x(node.data);\n      cy = tree._y(node.data);\n      r = 0;\n      m = 1; // mass\n    }\n  } else {\n    if (node.left && node.right) {\n      const ax = node.left.cx,  ay = node.left.cy;\n      const bx = node.right.cx, by = node.right.cy;\n      const ar = node.left.r, br = node.right.r;\n      const dx = bx - ax, dy = by - ay;\n\n      const dr = br - ar;\n      const l = Math.sqrt(dx * dx + dy * dy);\n\n      cx = (ax + bx + dx / l * dr) / 2;\n      cy = (ay + by + dy / l * dr) / 2;\n      r = (l + ar + br) / 2;\n\n      m = node.left.mass + node.right.mass; // mass\n    } else {\n      child = node.left || node.right;\n      cx = child.cx;\n      cy = child.cy;\n      r = child.r;\n\n      m = child.mass; // mass\n    }\n  }\n\n  node.cx   = cx;\n  node.cy   = cy;\n  node.r    = r;\n  node.mass = m;\n});\nconsole.timeEnd('circles');\n\ntree.preOrder(n => (n.fx = n.fy = 0));\n\nconst theta = 0.46;\nconst charge = 1;\nconst friction = 0.1;\nconsole.time('collect leafs');\nconst bodies = new Array(data.length)\nconst datas  = new Array(data.length);\n(() => { // collect leafs\n  let pos = 0;\n  if (tree._bucketSize === 0) {\n    tree.preOrder((n) => {\n      if (n.data) {\n        bodies[pos] = n;\n        datas[pos] = n.data;\n        pos++;\n      }\n    });\n  } else {\n    tree.preOrder(n => {\n      if (n.data) {\n        for (let i = 0; i < n.data.length; i++) {\n          bodies[pos] = n;\n          datas[pos]  = n.data;\n          pos++;\n        }\n      }\n    });\n  }\n})();\nconsole.timeEnd('collect leafs');\n\nconsole.time('bst tight');\nu.postOrder(getTightBoxesBST);\nconsole.timeEnd('bst tight');\n\nconsole.time('ubtree accumulate');\nu.postOrder((node) => {\n  let cx, cy, r, m, child;\n\n  cx = tree._x(node.data);\n  cy = tree._y(node.data);\n  r = 1;\n  m = 1; // mass\n\n  child = node.left;\n  if (child) {\n    const ax = cx,  ay = cy;\n    const bx = child.cx, by = child.cy;\n    const ar = r, br = child.r;\n    const dx = bx - ax, dy = by - ay;\n\n    const dr = br - ar;\n    const l = Math.sqrt(dx * dx + dy * dy);\n\n    cx = (ax + bx + dx / l * dr) / 2;\n    cy = (ay + by + dy / l * dr) / 2;\n    r = (l + ar + br) / 2;\n\n    m += child.mass;\n  }\n\n  child = node.right;\n  if (child) {\n    const ax = cx,  ay = cy;\n    const bx = child.cx, by = child.cy;\n    const ar = r, br = child.r;\n    const dx = bx - ax, dy = by - ay;\n\n    const dr = br - ar;\n    const l = Math.sqrt(dx * dx + dy * dy);\n\n    cx = (ax + bx + dx / l * dr) / 2;\n    cy = (ay + by + dy / l * dr) / 2;\n    r = (l + ar + br) / 2;\n\n    m += child.mass;\n  }\n\n  node.cx   = cx;\n  node.cy   = cy;\n  node.r    = r;\n  node.mass = m;\n});\nconsole.timeEnd('ubtree accumulate');\n\nfunction applyForces(data, tree) {\n  let ops = 0;\n  for (let i = 0; i < datas.length; i++) {\n    const pt          = datas[i];\n    const currentBody = bodies[i];\n\n    let fx = 0, fy = 0;\n    const x = tree._x(pt), y = tree._y(pt);\n    const r = currentBody.r;\n    const m = currentBody.mass;\n\n    tree.preOrder((node) => {\n      let dx = 0, dy = 0, c = 0, q = 0, dsq = 0, rmax = 0, sep = 0;\n      if (node !== currentBody) {\n        dx = x - node.cx;\n        dy = y - node.cy;\n        dsq = dx * dx + dy * dy;\n        rmax = r + node.r;\n\n        if (node.data) { // different leaf - direct calculation\n          c = charge;\n          if (dsq >= rmax * rmax) {\n            c *= m * node.mass;\n          } else {\n            dsq = friction * rmax * rmax;\n          }\n          q = c / dsq;\n          fx += dx * q;\n          fy += dy * q;\n          ops++;\n        } else { // different body - is it well-separated?\n          sep = rmax / theta;\n          if (dsq >= sep * sep) { // then use it as a solid body\n            c = charge;\n            if (dsq >= rmax * rmax) {\n              c *= m * node.mass;\n            } else {\n              dsq = friction * rmax * rmax;\n            }\n            q = c / dsq;\n            fx += dx * q;\n            fy += dy * q;\n            ops++;\n            return true; // and stop descending\n          }\n        }\n      } /*else if (tree._bucketSize !== 0) { // same leaf, bucket\n        for (let j = 0; j < node.data.length; j++) { // direct calc\n          const body = node.data[i];\n\n          if (body !== data) continue;\n\n          dx = x - tree._x(body);\n          dy = y - tree._y(body);\n          dsq = dx * dx + dy * dy;\n          c = charge;\n          rmax = r + node.r;\n\n          if (dsq >= (rmax * rmax)) {\n            c *= currentBody.mass * node.mass;\n          } else {\n            dsq = friction * rmax * rmax;\n          }\n          q = c / dsq;\n          fx += dx * q;\n          fy += dy * q;\n        }\n      }*/\n    });\n\n    currentBody.fx = fx;\n    currentBody.fy = fy;\n  }\n  return ops;\n}\n\n\nfunction directCalc(data) {\n  let FX = new Array(data.length), FY = new Array(data.length);\n  let ops = 0;\n  for (let i = 0; i < data.length; i++) {\n    const x = data[i][0], y = data[i][1], ra = 1, ma = 1;\n    for (let j = i + 1; j < data.length; j++) {\n      const x1 = data[j][0], y1 = data[j][1], rb = 1, mb = 1;\n      const dx = x - x1;\n      const dy = y - y1;\n      let dsq = dx * dx + dy * dy;\n      let c = charge;\n      const rmax = ra + rb;\n\n      if (dsq >= (rmax * rmax)) {\n        c *= ma * mb;\n      } else {\n        dsq = friction * rmax * rmax;\n      }\n      const q = c / dsq;\n      FX[i] += dx * q;\n      FY[i] += dy * q;\n      FX[j] -= dx * q;\n      FY[j] -= dy * q;\n      ops++;\n    }\n  }\n  return ops;\n}\n\n\n(() => {\n  const cur = bodies[n >> 1];\n  const pt = datas[n >> 1];\n  pt.selected = true;\n  pt.focus    = true;\n  cur.focus   = true;\n\n\n  if (tree._bucketSize !== 0) {\n    pt.forEach(p => p.focus = true);\n  }\n\n  tree.preOrder(node => {\n    if (node !== cur) {\n      if (node.data) {\n        if (tree._bucketSize === 0) {\n          node.data.selected = true;\n        } else {\n          const dx = cur.cx - node.cx;\n          const dy = cur.cy - node.cy;\n          const dsq = dx * dx + dy * dy;\n          const rmax = cur.r + node.r;\n          if (dsq >= (rmax / theta) * (rmax / theta)) {\n            node.scanned = true;\n          } else {\n            for (let i = 0; i < node.data.length; i++) {\n              node.data[i].selected = true;\n            }\n          }\n        }\n      } else {\n        const dx = cur.cx - node.cx;\n        const dy = cur.cy - node.cy;\n        const dsq = dx * dx + dy * dy;\n        const rmax = cur.r + node.r / theta;\n\n        if (dsq >= (rmax / theta) * (rmax / theta)) {\n          node.scanned = true;\n          return true;\n        }\n      }\n    }\n  });\n  show();\n}) ();\n\n\nquadtree.visitAfter((quad) => {\n  var strength = 0, q, c, weight = 0, x, y, i;\n\n  // For internal nodes, accumulate forces from child quadrants.\n  if (quad.length) {\n    for (x = y = i = 0; i < 4; ++i) {\n      if ((q = quad[i]) && (c = Math.abs(q.value))) {\n        strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n      }\n    }\n    quad.x = x / weight;\n    quad.y = y / weight;\n  }\n\n  // For leaf nodes, accumulate forces from coincident quadrants.\n  else {\n    q = quad;\n    q.x = q.data[0];\n    q.y = q.data[1];\n    do strength += 30;\n    while (q = q.next);\n  }\n\n  quad.value = strength;\n});\n\nfunction quadApply () {\n  const distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n  let ops = 0;\n  for (let i = 0; i < n; i++) {\n    const node = data[i];\n    quadtree.visit((quad, x1, _, x2) => {\n      var x = quad.x - node[0],\n          y = quad.y - node[1],\n          w = x2 - x1,\n          l = x * x + y * y;\n\n      // Apply the Barnes-Hut approximation if possible.\n      // Limit forces for very close nodes; randomize direction if coincident.\n      if (w * w / theta2 < l) {\n        if (l < distanceMax2) {\n          if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n          node.vx += x * 1 / l;\n          node.vy += y * 1 / l;\n          ops++;\n        }\n        return true;\n      }\n\n      // Otherwise, process points directly.\n      else if (quad.length || l >= distanceMax2) return;\n\n      // Limit forces for very close nodes; randomize direction if coincident.\n      if (quad.data !== node || quad.next) {\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n      }\n\n      do if (quad.data !== node) {\n        w = 30 / l;\n        node.vx += x * w;\n        node.vy += y * w;\n        ops++;\n      } while (quad = quad.next);\n    });\n  }\n  return ops;\n}\n\n\nfunction getTightBoxesBST (node) {\n  //const data = node.data;\n  let xmin = tree._x(node.data);\n  let xmax = xmin;\n  let ymin = tree._y(node.data);\n  let ymax = ymin;\n\n  let child = node.left;\n  if (child) {\n    xmin = Math.min(xmin, child.x0);\n    ymin = Math.min(ymin, child.y0);\n    xmax = Math.max(xmax, child.x1);\n    ymax = Math.max(ymax, child.y1);\n  }\n  child = node.right;\n  if (child) {\n    xmin = Math.min(xmin, child.x0);\n    ymin = Math.min(ymin, child.y0);\n    xmax = Math.max(xmax, child.x1);\n    ymax = Math.max(ymax, child.y1);\n  }\n\n  node.x0 = xmin;\n  node.y0 = ymin;\n  node.x1 = xmax;\n  node.y1 = ymax;\n}\n\n\nsvg.selectAll(\".node\")\n  .data(nodes(tree))\n  .enter().append(\"rect\")\n    .attr(\"class\", d => d.scanned ? 'node node--scanned' : 'node')\n    .attr(\"x\", d  => d.x0)\n    .attr(\"y\", d => d.y0)\n    .attr(\"width\", d => d.x1 - d.x0)\n    .attr(\"height\", d => d.y1 - d.y0);\n\n\nconst med = svg.selectAll(\".med\")\n  .data(tree.map((n) => [n.cx, n.cy, n.r, n.scanned, n.focus]))\n  .enter().append(\"circle\")\n    .attr(\"class\", d => d[4] ? 'med med--focus' : d[3]? 'med med--scanned' : \"med\")\n    .attr(\"cx\", d => d[0])\n    .attr(\"cy\", d => d[1])\n    .attr(\"r\",  d => d[2]);\n\n\ntree.preOrder(n => {\n  if (n.focus) {\n    svg.append('circle')\n      .attr('class', 'med--outer')\n      .attr('cx', n.cx)\n      .attr('cy', n.cy)\n      .attr('r', (n.r || 4) / theta);\n    return true;\n  }\n});\n\n\nsvg.selectAll(\".node\")\n  .data(nodesUB(u))\n  .enter().append(\"rect\")\n    .attr(\"class\", d => d.scanned ? 'node node--scanned' : 'node')\n    .attr(\"x\", d  => d.x0)\n    .attr(\"y\", d => d.y0)\n    .attr(\"width\", d => d.x1 - d.x0)\n    .attr(\"height\", d => d.y1 - d.y0);\n\n\n// const med = svg.selectAll(\".med\")\n//   .data(u.map((n) => [n.cx, n.cy, n.r, n.scanned]))\n//   .enter().append(\"circle\")\n//     .attr(\"class\", \"med\")\n//     .attr(\"cx\", d => d[0])\n//     .attr(\"cy\", d => d[1])\n//     .attr(\"r\",  d => d[2]);\n"],"names":["this","define","sr","let","const","morton","defaultX","defaultY","build","Node","sort","HILBERT","BST","MORTON","BVH","height","bvh","sfctree","bq","ubtree","ax","ay","bx","by","ar","br","dx","dy","dr","l","dsq","rmax"],"mappings":"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"}